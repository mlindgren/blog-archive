<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Technology | mlindgren.ca]]></title>
  <link href="http://blog.mlindgren.ca/categories/technology/atom.xml" rel="self"/>
  <link href="http://blog.mlindgren.ca/"/>
  <updated>2015-09-25T01:14:50-07:00</updated>
  <id>http://blog.mlindgren.ca/</id>
  <author>
    <name><![CDATA[Mitch Lindgren]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
    <entry>
      




<title type="html"><![CDATA[Windows 10!]]></title>
<link href="http://blog.mlindgren.ca/entry/2015/07/29/windows-10/"/>
<updated>2015-07-29T00:00:00-07:00</updated>
<id>http://blog.mlindgren.ca/entry/2015/07/29/windows-10</id>

      <content type="html"><![CDATA[<p>Windows 10 is out today! This is the first release of Windows that I have worked
on as a developer , and I&rsquo;m proud of what my team and Microsoft as a whole have
accomplished in the past year-and-a-half or so. Several tech websites have
already posted reviews, and so far the trend is very positive. A colleague of
mine posted some excerpts, which I&rsquo;m going to borrow:</p>

<p><blockquote><p>Windows 10 represents the obvious future of PC operating systems. It makes Mac OS X feel old-fashioned, stuck in a time where The Desktop was a thing that mattered and the only way to access the Internet was through a browser.</p><footer><strong>David Pierce <a href="http://www.wired.com/2015/07/windows-10-review/">http://www.wired.com/2015/07/windows-10-review/</a> Wired</strong></footer></blockquote></p>

<p><blockquote><p>So the question finally presents itself: should you upgrade your machine to Windows 10? Yes, you should.</p><footer><strong>Brad Sams <a href="http://www.neowin.net/news/windows-10-review-microsoft-goes-back-to-the-future">http://www.neowin.net/news/windows-10-review-microsoft-goes-back-to-the-future</a> Neowin</strong></footer></blockquote></p>

<p><blockquote><p>The best part of Windows 10 is that it ends the cycle of good and bad in favor of something great.</p><footer><strong>Tom Warren <a href="http://www.theverge.com/2015/7/28/9045331/microsoft-windows-10-review">http://www.theverge.com/2015/7/28/9045331/microsoft-windows-10-review</a> The Verge</strong></footer></blockquote></p>

<p><blockquote><p>It&rsquo;s nice, for once, to be able to recommend a new version of Windows without any hesitation.</p><footer><strong>Devindra Hardawar <a href="http://www.engadget.com/2015/07/28/windows-10-review/">http://www.engadget.com/2015/07/28/windows-10-review/</a> Engadget</strong></footer></blockquote></p>

<p><blockquote><p>If you are on a PC at all, Windows 10 is where you want to go. That it is free&mdash;for now&mdash;only makes the point simpler.</p><footer><strong>Alex Wilhelm <a href="http://techcrunch.com/2015/07/28/the-windows-10-era-is-now/">http://techcrunch.com/2015/07/28/the-windows-10-era-is-now/</a> Techcrunch</strong></footer></blockquote></p>

<p>If you haven&rsquo;t already done so, you can follow the instructions
<a href="https://www.microsoft.com/en-us/windows/windows-10-upgrade">here</a> to get your
free upgrade.  It&rsquo;s very exciting to have played a role in the creation of the
latest and truly greatest version of Windows; I think this is a huge
achievement for Microsoft, and I&rsquo;m happy to have been a part of it. The real
reward, though, is seeing people use and enjoy Windows 10&mdash;and that starts
today!</p>
]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Configuring DPI in Lubuntu/LXDE]]></title>
<link href="http://blog.mlindgren.ca/entry/2015/02/21/configuring-dpi-in-lubuntu-slash-lxde/"/>
<updated>2015-02-21T20:36:28-08:00</updated>
<id>http://blog.mlindgren.ca/entry/2015/02/21/configuring-dpi-in-lubuntu-slash-lxde</id>

      <content type="html"><![CDATA[<p>If you&rsquo;ve tried to use <a href="http://lubuntu.net/">Lubuntu</a> (or
<a href="http://www.lxde.org/">LXDE</a> on another distribution) with a high-DPI display,
you&rsquo;ve probably noticed that fonts and other UI elements are so tiny as to be
illegible without a magnifying glass.  You&rsquo;ve probably also noticed that there
is no GUI with which to adjust the UI scaling factor. Happily, it is possible to
change the DPI settings in LXDE, but this being Linux, it requires editing
obscure configuration files. Here&rsquo;s what you&rsquo;ll need to do:</p>

<ol>
<li>In your home directory, create a new text file named <code>.Xresources</code></li>
<li>In this file, enter your desired DPI in the following format: <code>Xft.dpi: 150</code></li>
<li>Restart the X server. You can do this by pressing <code>Ctrl + Alt + F1</code> to enter
single-user mode, then running <code>sudo service lightdm stop</code>, and then <code>sudo
service lightdm start</code>. (Note that it may be a different service if you are not
running Lubuntu. Alternatively, you can just reboot your machine.)</li>
</ol>


<p>This will scale UI elements in <em>most</em>, but not all, applications. For instance,
it doesn&rsquo;t resize the desktop panel, so you&rsquo;ll likely want to do that as well.
Luckily you can do so easily by right clicking on an empty space on the panel
and selecting Panel Settings; from there, just change the height of the panel in
pixels to a suitable value.</p>

<p>This is yet another tip that I&rsquo;m posting mainly becuase it took me an inordinate
amount of time to figure out how to do it. I found many suggestions on how to
enable scaling, but none of them worked until I stumbled across the above
instructions on the blog of <a href="http://bebabi34.altervista.org/index.php?action=viewnews&amp;news=1380636261">bebabi34</a>.
His blog is in Italian, so naturally it&rsquo;s not very searchable for English
speakers; hopefully by reproducing his instructions here, I can save others some
time.</p>
]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[How to manually send a Pingback]]></title>
<link href="http://blog.mlindgren.ca/entry/2015/01/17/how-to-manually-send-a-pingback/"/>
<updated>2015-01-17T21:04:29-08:00</updated>
<id>http://blog.mlindgren.ca/entry/2015/01/17/how-to-manually-send-a-pingback</id>

      <content type="html"><![CDATA[<p>A couple years ago I stopped using WordPress and
<a href="http://blog.mlindgren.ca/entry/2012/09/23/switching-to-octopress/">switched</a>
to <a href="http://octopress.org/">Octopress</a>, which is a derivative of
<a href="http://jekyllrb.com/">Jekyll</a>. I continue to be pretty happy with this
decision, but there are some downsides to using a static site generator. One
issue is the lack of support for
<a href="http://en.wikipedia.org/wiki/Pingback">Pingbacks</a>, which are a method supported
by a number of dynamic blogging platforms to notify another blog when you link
to its content. Pingbacks provide a good way to respond to blog posts using
your own blog rather than via commenting; thus, they facilitate &ldquo;conversation&rdquo;
between blogs. Unfortunately, if you&rsquo;re using Octopress or Jekyll or another
framework to generate static HTML pages, you won&rsquo;t natively have the ability to
send or receive Pingbacks.</p>

<p>Luckily, Pingbacks can be sent manually with relative ease. Receiving Pingbacks
still won&rsquo;t be possible, though; that&rsquo;s a much harder problem to solve, for a
variety of reasons which aren&rsquo;t relevant to this post.</p>

<p>Before I proceed, I want to note that full credit for this information goes to
<a href="http://aaronparecki.com/">Aaron Parecki</a>; he explains the technique in
<a href="https://gist.github.com/aaronpk/5744879">this GitHub Gist</a>. The reason I&rsquo;m
reproducing it here is because it was surprisingly hard to find Aaron&rsquo;s Gist,
or anything else of relevance, when I was searching for information on how to
send a Pingback. Hopefully, by posting about it and adding some extra context, I
can make the information more searchable.</p>

<p>First, you&rsquo;ll need to create a copy of this XML file on your local machine:</p>

<p><figure class='code'><figcaption><span>pingback.xml </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="ni">&amp;lt;</span>?xml version=<span class="ni">&amp;ldquo;</span>1.0<span class="ni">&amp;rdquo;</span> encoding=<span class="ni">&amp;ldquo;</span>iso-8859-1<span class="ni">&amp;rdquo;</span>?&gt;
</span><span class='line'><span class="nt">&lt;methodCall&gt;</span>
</span><span class='line'><span class="nt">&lt;methodName&gt;</span>pingback.ping<span class="nt">&lt;/methodName&gt;</span>
</span><span class='line'><span class="nt">&lt;params&gt;</span>
</span><span class='line'> <span class="nt">&lt;param&gt;</span>
</span><span class='line'>  <span class="nt">&lt;value&gt;</span>
</span><span class='line'>   <span class="nt">&lt;string&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://source/url/here&quot;</span><span class="nt">&gt;</span>http://source/url/here<span class="nt">&lt;/a&gt;&lt;/string&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/value&gt;</span>
</span><span class='line'> <span class="nt">&lt;/param&gt;</span>
</span><span class='line'> <span class="nt">&lt;param&gt;</span>
</span><span class='line'>  <span class="nt">&lt;value&gt;</span>
</span><span class='line'>   <span class="nt">&lt;string&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://target/url/here&quot;</span><span class="nt">&gt;</span>http://target/url/here<span class="nt">&lt;/a&gt;&lt;/string&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/value&gt;</span>
</span><span class='line'> <span class="nt">&lt;/param&gt;</span>
</span><span class='line'><span class="nt">&lt;/params&gt;</span>
</span><span class='line'><span class="nt">&lt;/methodCall&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Replace the two URLs as appropriate - the first one is the source (i.e. your
blog post), and the second is the target (the post you are linking to).</p>

<p>Now, you just need to <code>POST</code> the request to the target server. You&rsquo;ll need to
know the target&rsquo;s XML-RPC endpoint URL for this.  Usually, it will be <code>/xmlrpc</code>,
or for WordPress blogs, <code>/xmlrpc.php</code>. You can find out for sure by inspecting
the site&rsquo;s source for a <code>&lt;link rel="pingback" href="..."/&gt;</code> tag.</p>

<p>You can use cURL to post your request. It&rsquo;s built into most Unix-like operating
systems, but Windows users will have to
<a href="http://curl.haxx.se/dlwiz/?type=bin&amp;os=Win32&amp;flav=-&amp;ver=2000%2FXP">download it</a>,
and if you&rsquo;re on Mac OS X you probably need to have Apple&rsquo;s developer tools
installed.  Just run:</p>

<pre><code>curl -X POST -d @pingback.xml http://example.com/xmlrpc.php
</code></pre>

<p>&hellip;and that&rsquo;s it! cURL should print out an XML response from this server with a
message indicating that your Pingback was registered. Of course, to be truly
sure it worked, you should check the target URL and see if your Pingback was
added to the page. (Note that some sites disable Pingbacks.)</p>
]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Switching to Octopress]]></title>
<link href="http://blog.mlindgren.ca/entry/2012/09/23/switching-to-octopress/"/>
<updated>2012-09-23T23:22:00-07:00</updated>
<id>http://blog.mlindgren.ca/entry/2012/09/23/switching-to-octopress</id>

      <content type="html"><![CDATA[<p>I&rsquo;ve been using Wordpress on various sites that I&rsquo;ve maintained for probably the
better part of a decade now. By most metrics, it&rsquo;s still very good blogging
software; I&rsquo;m not aware of any self-hostable alternative that can match
Wordpress in terms of the union of ease of use, feature set and flexibility that
it provides. That said, lately I&rsquo;ve been feeling that perhaps Wordpress is no
longer the right choice for my specific needs. These are my problems with it:</p>

<ul>
<li>It&rsquo;s not very good for sharing source code. There are a multitude of plugins
available for syntax highlighting; the best of them seems to be
<a href="http://alexgorbatchev.com/SyntaxHighlighter/">Alex Gorbatchev&rsquo;s Syntax Highlighter</a>,
which is used by
<a href="http://wordpress.com">Wordpress.com</a> and is also what I was using on my blog.
But I&rsquo;ve had problems with the Wordpress converting some of the characters in
my code to HTML entities (e.g. <code>&amp;amp;</code> for &amp; ) which are then printed
literally by the plugin.</li>
<li>I find that more often than not Wordpress' visual editor is
insufficient for the formatting I want in my posts. That forces me to use
the raw HTML editor. That would be fine, except that Wordpress has a strange
sort of off-spec way of storing post HTML. Paragraph and line break tags are
omitted in the editor and the database, and are added when the page is
actually rendered to the client. This is okay, I guess, and I <em>think</em>
Wordpress is smart enough to not insert extra paragraph tags if you do wrap
your own paragraphs with them. Still, it leads to some unpredictability with
regard to how a post with hand-written HTML will actually be rendered.</li>
<li>A similar but worse problem occurs when you try to insert extra line breaks.
Even if you&rsquo;re using the raw HTML editor to insert <code>&lt;br /&gt;</code> tags, Wordpress
will just get rid of them unless you insert additional non-breaking spaces
(<code>&amp;nbsp;</code>) so that it thinks the lines are non-empty. But! If you switch back
to the visual editor for any reason, even your <code>&amp;nbsp;&lt;br /&gt;</code> lines will be
wiped out. Even for &ldquo;average&rdquo; users I can&rsquo;t think of any situation in which
this &ldquo;feature&rdquo; would be desirable. If I put a bunch of extra newlines into
something I&rsquo;m writing, it is because <em>I want exactly that many newlines.</em> I
tend to not have much patience for software that thinks it&rsquo;s smarter than
I am; that is why I still write most of my code in <a href="http://www.vim.org/">Vim</a>
and use hand-written makefiles in an age of
<acronym title="Integrated Development Environment">IDE</acronym>s.</li>
<li>Never-ending updates. It seems like every time I log in there&rsquo;s a new update
to download. Wordpress has updates down to a one-click install process, so
this wouldn&rsquo;t be much of a problem except for the fact that
every time I have to update Wordpress warns me that I should back up my
database first. Why? Is there a significant possibility that the update might
break everything? It&rsquo;s probably just a
<acronym title="Cover Our Asses">COA</acronym>, and I back up my database
daily anyway, but this whole aspect of Wordpress makes me uneasy and I don&rsquo;t
want to have to deal with it any more. Even though I&rsquo;m covered for backups,
recovering from a botched update would undoubtedly be a nightmare.</li>
<li><a href="http://en.wikipedia.org/wiki/WordPress#Vulnerabilities">Vulnerabilities.</a> One
of the big reasons that Wordpress is updated so frequently is that it has a
long history of security vulnerabilities, and more are still being discovered
and patched. This also means that if I don&rsquo;t log in frequently enough to
download new security patches, I&rsquo;m at risk of having my site compromised,
loaded up with malware and blacklisted by Google.</li>
<li><p>It&rsquo;s written in PHP. <a href="http://me.veekun.com/blog/2012/04/09/php-a-fractal-of-bad-design/">PHP sucks.</a>
(I can&rsquo;t link to that enough.) I don&rsquo;t want to be dogmatic about technology
choices; good software is good software regardless of what language it&rsquo;s
written in, and my primary desire is always to use whatever is best for the
task at hand. But lately I&rsquo;ve been pretty vocal, both here and in person with
friends and colleagues, about how bad PHP is. Continuing to rely on it
undermines my credibility on the issue and makes me a bit of a hypocrite.</p>

<p>And while this might seem trivial or pedantic, it&rsquo;s
actually one of the root causes of almost all of the issues above; the weird
HTML handling, inappropriate entity conversion, and security issues are all
due, at least in part, to bad design patterns popularized and perpetuated by
PHP. Wordpress still uses raw non-parameterized SQL queries; blogging software
built on a modern web framework with a proper
<acronym title="Object-Relational Mapping">ORM</acronym>
would not be plagued by SQL
injection exploits as Wordpress has been historically and probably continues
to be.</p></li>
<li>Wordpress supports themes so that you can customize the apperance of your
site, but editing them kind of sucks, because they&rsquo;re all written in PHP
instead of a proper templating language. Years ago I actually wrote a lot of
PHP, but I still find Wordpress templates pretty ugly and difficult to
understand; they seem more verbose than should really be necessary for what
they accomplish, and have, on average, more <code>&lt;?php ?&gt;</code> sections than a
keyboard has keys. (That analogy sucked. Sorry, it&rsquo;s late. What I&rsquo;m trying to
say is that there are a lot of them.)</li>
</ul>


<!-- more -->


<p>So recently I got it into my head to switch over to
<a href="http://octopress.org/">Octopress.</a> Octopress bills itself as &ldquo;a blogging
framework for hackers,&rdquo; which is an attractive description given my
<a href="/categories/coding">predilections.</a> It uses
<a href="https://github.com/mojombo/jekyll">Jekyll</a> to generate static pages from a set
of templates and content written in
<a href="http://daringfireball.net/projects/markdown/">Markdown.</a><sup>1</sup> It is,
without a doubt, harder to use than to Wordpress, but it has the following
advantages:</p>

<ul>
<li>Rendering static pages once and serving dynamic content via AJAX is much more
efficient than rendering entire pages dynamically for each visitor. This isn&rsquo;t
really a concern for me because this is a very low-traffic site, and I have an
entire quad-core <acronym title="Virtual Private Server">VPS</acronym>
doing basically nothing besides serving this site. That said, it&rsquo;s nice to
know that when I start doing other stuff on my VPS, I won&rsquo;t be contending for
cycles with PHP and MySQL, so the site will always be very responsive. Plus,
wow does the site load fast now (once you have that huge header image cached,
anyway. I&rsquo;ll fix that soon.) Also not a huge concern for a blog, but I
didn&rsquo;t expect the difference to even be noticeable, and it definitely is.</li>
<li>Static pages significantly decrease the attack surface of the site; there is
no database, so no SQL injection to worry about, and no scripts are being
executed, so <a href="http://www.kb.cert.org/vuls/id/520827">PHP vulnerabilities</a>
aren&rsquo;t a concern.</li>
<li>Static pages means I get a nicely organized, easily navigable directory
structure instead of God-awful rewrite rules.</li>
<li>The default Octopress theme is very well designed and well-suited to
customization.  I was able to modify it to make it look almost exactly like my
old custom Wordpress theme did, while retaining the fully fluid layout of the
Octopress theme&mdash;meaning that the layout will resize to look beautiful at
any screen resolution, including on mobile devices.</li>
<li>Octopress has pretty nice built in Github and Twitter widgets.</li>
<li>Comments are handled by <a href="http://disqus.com/">Disqus</a>, which provides a nicer
comment system than Wordpress' built in comments.  I was using Disqus anyway
via a plugin, but now I don&rsquo;t have to worry about keeping the Disqus comments
synced with the Wordpress database. Incidentally, Disqus provides a very nice
system to migrate comments to new URLs by uploading a
<acronym title="Comma Separate Value">CSV</acronym> file mapping old URLs to
new URLs. They&rsquo;ve really thought of everything, so props to them for providing
a great service.</li>
<li>All of the blog content is stored on my local machine, which means I can write
posts in a disconnected environment using Vim, version control them with Git,
and then push them to my server when they&rsquo;re finished. I have a nice
deployment setup where everything is stored in a Git repository on the server
and a post-commit hook copies the updated content to the web root for the blog
subdomain. All I have to do is <code>git push</code> and the blog is instantly updated.</li>
<li>Since Wordpress uses hand-written SQL queries, it is tightly coupled with
MySQL and doesn&rsquo;t support any other database. PHP is similarly tied to Apache;
while it&rsquo;s possible to run it with other servers, it&rsquo;s not particularly easy.
By ditching Wordpress, I can also get rid of Apache, PHP and MySQL. This is
nice since I was planning to use nginx and Postgres for my
<a href="/entry/2012/09/14/social-networks-and-content-ownership/">photo album project</a>
anyway.</li>
</ul>


<p>Those are, give or take a few minor considerations, my reasons for switching
blogging platforms. I&rsquo;d be remiss to not mention that Octopress does have some
noteworthy disadvantages even for &ldquo;power users&rdquo; to whom the above advantages
might sound attractive.
<a href="http://alblue.bandlem.com/2012/02/disadvantages-of-octopress.html" title="Disadvantages of Octopress - AlBlue's Blog">This post</a>
does a good job cataloguing a few of them. On the balance, though, I feel like
it&rsquo;s a good choice for me, and although the switch took me considerably longer
than I expected (the better part of an weekend where I&rsquo;d expected an evening or
so of work), I&rsquo;m pretty happy that I did it.</p>

<p>In an upcoming post, I&rsquo;ll discuss the actual process of reconfiguring my server
and importing all of my content (which is what I had planned to do before this
turned into a 1,600 word diatribe against Wordpress.) For now, if I&rsquo;ve inspired
you and you&rsquo;re thinking about switching your own Wordpress site to Octopress,
you can take a look at the
<a href="https://github.com/mlindgren/wp2octopress"><acronym title="Extract, Transform, Load">ETL</acronym> I wrote</a>
to ease the import process.</p>

<p><sup>1</sup> <small>Did you know that Markdown was created by John Gruber? Until very
recently, I didn&rsquo;t. And here I thought all he did was play apologist for
Apple.</small></p>
]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Social networks and content ownership]]></title>
<link href="http://blog.mlindgren.ca/entry/2012/09/14/social-networks-and-content-ownership/"/>
<updated>2012-09-14T00:45:00-07:00</updated>
<id>http://blog.mlindgren.ca/entry/2012/09/14/social-networks-and-content-ownership</id>

      <content type="html"><![CDATA[<p>I&rsquo;m always wary about pre-announcing things I&rsquo;m working on; I have more ambition than spare time, which leads to a tendency to start projects and not finish them.  But if there&rsquo;s to be a point in maintaining this website, I need to actually <em>write things</em> once in a while, so I may as well write about what I&rsquo;ve been hacking on lately.  At the moment, I&rsquo;m building a web-based photo album in Python.  My primary reason for doing this is that I&rsquo;d like to own more of my information.  Apps and social networks have some significant advantages, particularly for the less technologically inclined, but I&rsquo;m ambivalent about the trend away from an open Internet and towards a set of non-interoperable, monolithic walled-garden services.<!-- more --></p>

<p>When Google+ debuted, my enthusiasm for the service followed a sort of bell curve.  I was already using Twitter and Facebook, and I didn&rsquo;t want to have to post everything to yet another service.  At the urging of friends, I joined anyway, and warmed to it considerably.  It was simply better software than Facebook; the interface was cleaner, the privacy controls more usable, the communication options more diverse, the means of sharing and interacting with media more engaging and deeply integrated.  Best of all, there wasn&rsquo;t nearly as much app spam.  Much of this is probably still true, although the impression I get from Google+ pages I&rsquo;ve stumbled across recently is that they&rsquo;ve been trying to make it look more like Facebook, to its detriment.</p>

<p>Realizing that it was a better product in almost every regard, I started using Google+ almost exclusively and tried to recruit additional friends away from Facebook.  I stopped uploading new photos to Facebook and even purchased additional storage capacity on Google+ so I could upload all of my photos there at the original quality.  Problems quickly became apparent, though.  Despite my best efforts, nobody was using the service; even among those of my friends who were enthusiastic early adopters, actual <em>social</em> activity among my circles dropped off quickly, and I soon found myself wondering why I even bothered to check for updates.  I finally deleted my account when I logged in one day and realized that the newest post in my news feed was from several months prior.</p>

<p>And with my Google+ account, there went all of the photos and other content I had uploaded.  I still have the files, of course, but the effort I expended in selecting a handful of good photos to upload to each gallery from the hundreds of shots I take on most outings, not to mention the comments, captions, and other metadata I had curated, vanished into the ether with not a trace left behind.  The moral of the story is that private social networks are impermanent, and thus anything uploaded to them necessarily has an unknown but very much finite period of accessibility and relevance.  Whether or not Google ever admits it, Google+ never quite took off, but it could have supplanted Facebook just as Facebook did MySpace.  If and when some other service comes along and succeeds where Google+ failed, every user on Facebook will be forced to start over from scratch on whatever&rsquo;s in vogue next.</p>

<p>I&rsquo;m tired of playing that game. I want to keep control over the content I create so that I can truly decide how it&rsquo;s shared and with whom, and so that if I need to migrate my data to a new system, I have the means to do so.<sup>1</sup> The ultimate realization of this ideal is in decentralized services based on open protocols, such as <a title="Tent" href="http://tent.io/">Tent</a>. I&rsquo;m very enthusiastic about such attempts, but realistically, I&rsquo;m skeptical that any of them will ever gain the necessary traction to make a real difference. Even if Tent or some analogue gains millions of users, it will be a drop in the bucket compared to Facebook, and entrenched players such as Facebook will have no incentive to interoperate because decentralized services do nothing but threaten their business model.</p>

<p>I will do as much as is in my power to help services like Tent succeed, but for the time being, that is not much.  That kind of leaves me without a good means of pushing my content to the people who care about it.  Nevertheless, I can still take ownership of it by hosting it on my own server using my own tools.  That is the purpose of developing my own photo album software.  I&rsquo;m making good progress so far, and hopefully soon I&rsquo;ll have more to share; once the code is in a reasonably complete state with most of the major features I want for my own purposes, I intend to make the app open source and share the code on my <a title="mlindgren on Github" href="https://github.com/mlindgren" target="_blank">Github account.</a>  And now that I&rsquo;ve announced my intent publicly, I expect anyone who reads this to hold me to my plan to ensure that I get it finished!</p>

<p><sup>1</sup> <small>Both Facebook and Google+ provide a means of exporting the data you&rsquo;ve shared. I believe both will export everything belonging to you personally, but I don&rsquo;t think you necessarily get to keep all of the social data associated with your content, e.g. comments, nor the relationships between different pieces of content. Last I checked, the data was merely dumped into a bunch of flat files; nothing is kept in a structured format that makes it easy to work with, and even if it were, other privates services don&rsquo;t usually offer the option to import your data. While it may still not be easy, if you own your own data and manage it using open source tools, it&rsquo;s at least <em>possible</em> to migrate everything to another system with the greatest fidelity supported by that system.</small></p>
]]></content>
    </entry>
  
</feed>

