<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[mlindgren.ca]]></title>
  <link href="http://blog.mlindgren.ca/atom.xml" rel="self"/>
  <link href="http://blog.mlindgren.ca/"/>
  <updated>2013-07-30T03:20:24-07:00</updated>
  <id>http://blog.mlindgren.ca/</id>
  <author>
    <name><![CDATA[Mitch Lindgren]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The Subaru Saga]]></title>
    <link href="http://blog.mlindgren.ca/entry/2013/06/09/the-subaru-saga/"/>
    <updated>2013-06-09T22:22:00-07:00</updated>
    <id>http://blog.mlindgren.ca/entry/2013/06/09/the-subaru-saga</id>
    <content type="html"><![CDATA[<p>Or &ldquo;buying used cars is the worst and I will never do it ever again.&rdquo;</p>

<p>I recently purchased a new-to-me 2011
<a href="http://www.subaru.com/vehicles/impreza-wrx/index.html">Subaru WRX STI</a> sedan.
I had been thinking about buying a new car for a long time&mdash;since I
graduated, more or less. Until I bought my Subaru, I owned an ageing Honda Civic
(1997, to be precise).  While it was a very capable and extremely reliable car
throughout the many years I owned it for, it was old enough that it lacked some
of the conveniences one expects in a car these days, such as power locks and
windows, and most importantly, air conditioning.  The lack of air conditioning
in particular made it  less than ideal for summer road trips, and more
importantly, it was in need of some moderately expensive maintenance, and it
didn&rsquo;t seem to make sense to me to spend much money on it given that the overall
value of the car was fairly low.</p>

<p>I didn&rsquo;t go on many test drives before I purchased my Subaru, but I didn&rsquo;t feel
the need to; I had already spent months watching reviews, reading forums,
comparing specs and window shopping on AutoTrader. I knew I wanted a sporty car
with plenty of horsepower for under $40,000, and all-wheel drive was a must as I
go to the mountains nearly every weekend in the winter and almost as often in
the summer. Besides the STI, the Evo, MazdaSpeed3, and the Golf R were the best
contenders, but each had significant drawbacks with regard to my personal
preferences. The Evo has a notoriously lacklustre interior (not that the STI is
<em>a lot</em> better, to be fair); I don&rsquo;t like the way the MazdaSpeed3 looks, and the
Golf comes with the reputation of higher maintenance costs for German cars.</p>

<p>I also really like the Subaru community.
<a href="http://www.reddit.com/r/subaru">/r/subaru</a> is the largest manufacturer-specific
subreddit, and in addition to forums like <a href="http://forums.nasioc.com/">NASIOC</a>,
it comprises a vibrant community of enthusiastic Subaru owners. Of course other
brands have significant followings as well&mdash;particularly VW&mdash;but my
impression of the Subaru community is that it&rsquo;s less elitist and, in contrast to
the others, puts as much emphasis on what one can <em>do</em> with the cars as on the
cars themselves. To &ldquo;go Subaruing&rdquo; is a popular term for going out into the mud
or the snow or the sand or the bush and getting the car wet and dirty, and
having a ton of fun in the process.</p>

<p>The STI, then, was the clear winner in my eyes.  Truth be told, a WRX probably
would have been more than sufficient for my needs, but I generally prefer to put
down the extra money and be sure that I&rsquo;m getting the best product. And hey, one
only has so long to exercise the opportunity to be young and irresponsible!</p>

<h2>Finding My Car</h2>

<p>So, finally I decided to bite the bullet, and I found a used STI that looked
really nice on Craigslist. On March 9th, 2013, I went with a friend to
<a href="http://www.rentonsubaru.com/index.htm">Walker&rsquo;s Renton Subaru</a>
to look at the vehicle and take it for a test drive.  Walker&rsquo;s is sort of two
separate dealerships on the same lot; there&rsquo;s the Subaru dealership and there&rsquo;s
also <a href="http://www.rentonmazda.com/index.htm">Walker&rsquo;s Renton Mazda</a>.  Obviously
they&rsquo;re both under the same ownership, and it seems that salespeople on one lot
can sell cars on the other lot as well; the car I went to look at was listed as
being at the Subaru dealership, but I ultimately ended up dealing primarily with
the Mazda dealership because that is where the salesman I first contacted
worked.</p>

<p><a href="http://www.dealerrater.com/sales/Ken-Palmer-review-33450/">Ken Palmer</a> was the
salesperson I dealt with. Both he and the dealership itself have very high
ratings on the site that link points to (DealerRater.com), which is surprising
to me because dealing with them (particularly the dealership; I have less
animosity for Ken) has been by far the worst experience I&rsquo;ve ever had as a
consumer.  The reason for that will become clear shortly, but bear in mind that
even before I discovered the major issue which prompted this post, I would not
have said that my buying experience with Walker&rsquo;s was <em>good</em> by any means.
Incidentally, their
<a href="http://www.yelp.com/biz/walkers-renton-subaru-renton-2">Yelp ratings</a> are
considerably lower, although there aren&rsquo;t as many reviews on Yelp.</p>

<p>We went to the Mazda dealership and I took a look at the car. It looked great;
the paint job was (and is) in great shape for the most part, although there were
a number of small nicks on the rear doors where the body flares out into the
wide wheel arches, as well as some on the front bumper pieces where the fog
lights would go (this car doesn&rsquo;t have fog lights).  I didn&rsquo;t really notice
those at the time, but they&rsquo;re minor and I doubt they would have influenced my
purchasing decision anyway. There was also some minor cosmetic damage to the
interior: a bit of chipping on the painted bezel around the satellite navigation
unit and centre vents, a white mark on the driver&rsquo;s side between the centre
console and the steering wheel, another on the glove box, and a minor nick in
the steering wheel leather. There is some minor curb rash on wheels which I
somehow failed to notice before I bought the car, but it&rsquo;s not noticeable from a
distance of more than a few feet. Overall the car appeared to be in excellent
condition.</p>

<p>We went for a test drive and I really liked the way it handled. Traffic was
moderately heavy and I didn&rsquo;t get much of a chance to open up the taps and
really test our the car&rsquo;s power on the route we took.  Truth be told, I wasn&rsquo;t
even doing a particularly good job driving it, as I&rsquo;d driven a manual car a
grand total of two times before that test drive, including once on the way to
the dealership&mdash;I drove my friend&rsquo;s car there to get some additional
practice<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. Even so, I could tell then that I would grow to love the car
more and more as I learned how to drive it better, and in retrospect I was
completely correct about that.</p>

<p>During the test drive I noticed that the exhaust was very loud&mdash;not
irritatingly so, and I loved the way it sounded, but I thought it couldn&rsquo;t
possibly be stock so I asked Ken. He confirmed that it was stock, which at the
time I na√Øvely accepted. I later found out that this was not true.  I believe
that the downpipe, midpipe and catalytic converter are stock, but the tail pipe
seems to have been replaced with a
<a href="http://shop.namelessperformance.com/sti-sedan-axleback/">Nameless Performance AxelBack Muffler Delete</a>.
That&rsquo;s strike number one against Ken. I like the exhaust, and I don&rsquo;t mind that
it&rsquo;s aftermarket, but he should have done his research on the vehicle before
trying to sell it to me. If he wasn&rsquo;t sure whether or not the exhaust was stock,
he could have answered honestly and we could have looked it up to find the
correct answer. It irritates me that I was given false information, and while
everyone makes mistakes, given what I now know I can&rsquo;t help but ascribe this to
him valuing presentation over honesty.</p>

<h2>This Is Where It Gets Unpleasant</h2>

<p>We got back to the dealership and I decided that I liked the car enough that I
was prepared to sit down and negotiate on the price.  The list price on the
Craigslist ad I&rsquo;d responded to was around $32,000, but I told Ken that I was not
prepared to pay that much and that I was looking for $29,000. He said there was
no way he could go that low, as the price they were offering was already low in
his opinion. For the record, the Blue Book value for the car as I bought it is
currently $32,900 when purchased through a dealership, but that assumes
excellent condition, which I don&rsquo;t think the car <em>quite</em> qualifies for given the
minor cosmetic damage to the interior and the fact that some of the tires are at
less than 75% tread depth. The private party Blue Book value given those facts
is currently $30,000. Ultimately I paid $31,000, which given dealership markup
seemed reasonable at the time.</p>

<p>I spent quite a long time negotiating with Ken, so I want to take some time to
describe his personality and style as a salesperson. I can&rsquo;t help but view him
as a reasonably nice guy. He seemed to be friendly and in possession of a good
sense of humour, and was very patient with my less than stellar manual driving.
That said, he was subtly pushing me to spend more than I wanted to, and he gave
me misinformation and made statements of dubious veracity in several instances
(I hesitate to say &ldquo;lied&rdquo;).  For instance, when I told him I didn&rsquo;t <em>need</em> a new
car and that I could just as easily walk away, he repeatedly emphasized that the
STI was &ldquo;a hot item&rdquo; and that if I left and came back tomorrow, it might not
still be on the lot.  This is kind of true under the right circumstances, but I
had been looking at Craigslist and AutoTrader for months at this point, and I
knew that this car in particular had been sitting on their lot for at least a
month&mdash;maybe more like two months.  That fact was also ascertainable from
some of the paperwork Ken gave me on the vehicle, so it was a pretty poor
attempt to mislead me.</p>

<p>I also happened to notice that the price on Craigslist had dropped something
like $50 between the night before and the day I was there, so I called him on
that as well. He changed his story at that point and told me how the STI is a
performance car for a particular type of buyer, and not just anyone would be
looking for one, to which I replied: yeah, that&rsquo;s my point!  It&rsquo;s a sought-after
car but it&rsquo;s also not something just anyone is going to drop in and buy, so I
know you can&rsquo;t sell it as quickly as you say you can.</p>

<p>While Ken repeatedly insisted that he was on my side and wanted to work with me
to get me the best deal possible, and that he wasn&rsquo;t a typical pushy sales guy,
I&rsquo;d also describe his tactics as emotionally manipulative.  During the
negotiation whenever I requested something and he went and talked to his manager
and came back with a not-quite-good-enough offer, he&rsquo;d walk back to the desk
languidly with his head hung in faux-exhaustion, and say with an exasperated
sigh that he just couldn&rsquo;t make it work or something along those lines.  The
friend I&rsquo;d come with told me at one point that he was using tricks specifically
tailored to work on my personality type, which I think is probably an accurate
assessment because even though I knew what he was doing, I think there was a
subconscious element of feeling bad for the guy and wanting to work with him for
that reason.</p>

<p>After the initial negotiation we ended up agreeing on $30,800, conditional on me
being able to take the car to an independent mechanic for an inspection. I am
about as mechanically adept as Jeremy Clarkson, but without the benefit of his
encyclopedic knowledge of cars.  For that reason, I hadn&rsquo;t even bothered to look
under the hood, and it was important to me to get the car checked out
independently to verify its condition.</p>

<p>The process got a little strange at this point. I wanted to write above that we
verbally agreed on $30,800, but that&rsquo;s not quite accurate.  Ken and I would
agree on something and he&rsquo;d write down the offer on paper and make a crude &ldquo;sign
here&rdquo; line and ask me to initial it.  Even though I knew his handwritten offer
couldn&rsquo;t possibly be legally binding, and he assured me of as much, I was a bit
hesitant to do this as it just gave me a bad vibe.  But he refused to proceed
unless I&rsquo;d initial his paper, so I did.  He took that to his manager and finally
we were able to come to an agreement.</p>

<p>I got a temporary permit to drive the car and took it to
<a href="http://www.communityautomotiveservice.net/">Community Automotive Service</a>
in Burien, which, strangely, seems to be one of very few mechanics in the area
south of Seattle. I paid around $80 for the mechanic there to do a quick
examination of the car. He pulled the ODBII codes, checked the brakes, fluid
levels, etc, and took the car for a short test drive, among other things.  When
I came back to pick it up he told me that overall it was in great condition, but
it seemed that the 30,000 mile maintenance had never been done.  That was pretty
alarming to me as the car was at approximately 33,500 miles at that point,
meaning it was 3,500 miles overdue for some fairly important maintenance. I
expected the dealership to have done that maintenance as part of the trade in process
and factored the cost into the price they paid for the car; as far as I&rsquo;m
concerned, one shouldn&rsquo;t even be taking the car on test drives when it&rsquo;s 3,500
miles overdue for maintenance.  I got antsy when my Civic was a couple hundred
kilometres overdue for an oil change, and an STI has considerably more power
with which to rip itself apart if it&rsquo;s not kept in good condition. In retrospect
I think that alone should have been enough to make me go look elsewhere, but I
had already spent probably 4-5 hours at this point between the test drive and
the negotiating. I didn&rsquo;t want all of that time to be for nothing.</p>

<p>To be specific, the mechanic at Community Automotive said that a number of the
car&rsquo;s fluids needed to be flushed, that the air and fuel filters needed to be
replaced, that the brake pads would need to be replaced within a few months, and
that it would need new tires in the not-too-distant future.  His statement about
the tires turned out to be questionable as I later found out that they do all
still have more than 50% tread depth remaining, but the rest of his findings
seem to have been accurate. He also gave me a printout of the ODBII history.
There were a few error codes (abnormal clutch signal, power supply voltage
failure, excessive variation from steering position sensor, and right-hand
curtain airbag control module failure), but they were from the past and not
reproducible so he said he didn&rsquo;t feel that they were anything to worry about.
Overall, he told me that he liked the car and thought it was in great shape
except for the maintenance that needed to be done.  He thought the price I&rsquo;d
agreed on was a bit high, but I don&rsquo;t think he was aware of how high the Blue
Book value for the vehicle was, because he seemed surprised when I told him that
as well.</p>

<p>I went back to the dealership and began hours more of painful negotiation.
Given the issues that the mechanic had identified I was not willing to pay
$30,800 unless the dealership would fix some of them.  They were very reluctant
to budge on this and in the end I gave in more than I probably should have.  I
talked to both Ken and his manager, and both were incredulous about the report
that the mechanic had given me; they didn&rsquo;t feel that most of the items were
real issues.  I very clearly recall Ken&rsquo;s manager,
<a href="http://www.dealerrater.com/sales/Jan-Rac-review-136803">Jan Rac</a>,
giving me a spiel about how Walker&rsquo;s Renton Subaru had well-qualified
technicians, how they had a reputation to uphold, and how they had the only &ldquo;STI
tech&rdquo; in the area and that nobody else is allowed to work on STIs.  I thought at
the time that much of this was probably a huge load of bullshit, and in
retrospect it <em>almost certainly</em> is.  As far as I can tell there is no such
thing as an &ldquo;STI tech.&rdquo; Nissan has something like that for GT-Rs, but that&rsquo;s a
$100,000 car.  I cannot find any reference, anywhere, to any such thing as an
&ldquo;STI tech.&rdquo;  I do not like being lied to.</p>

<p>Ken, who had previously been absolutely fine with me taking the car to an
independent mechanic and was convinced that I wouldn&rsquo;t find any issues,
exasperatedly told me how independent mechanics never say anything good about
cars; they&rsquo;re only looking for problems (yes, that&rsquo;s <em>exactly the point</em>) and
implied that the guy I&rsquo;d taken it to was just looking to cash in&hellip;  even after
my wife and I<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> repeatedly told him that we had no affiliation with that
mechanic and that the mechanic knew that we would not be taking the car back to
him for repairs. We negotiated more and finally agreed to them replacing the
brake pads and doing some of the fluid flushes in exchange for bumping the sale
price up to $31,000 (because the brake pad replacement alone cost almost $600
since the STI uses Brembo pads).  It terms of the maintenance they offered, it
wasn&rsquo;t that great a deal for me, and as I mentioned earlier, in retrospect I
really should have just walked at this point. In fact I almost did over a
miscommunication about the brake pad replacement: I wanted all of them replaced,
but Ken had assumed I meant only one pair and had neglected to ask <em>which</em> pair.
I had been at the dealership literally all day at this point; I was there for at
least ten hours, and I really wanted to close the deal just so it wouldn&rsquo;t be a
huge waste of time.  Nevertheless I told them it was all of the brake pads or I
was leaving, and after some pageantry about confirming the offer with the sales
manager (who had already left at this point), we finally reached an agreement.</p>

<p>I added on some extras as well, including 3M protection for the front of the
vehicle for around $600, and an extended warranty for around $2000. Including
taxes, the total cost was around $38,000.</p>

<h2>Foreshadowing</h2>

<p>Here&rsquo;s where things get <em>really</em> shady.  I left the car at the dealership to
have the service done so I wouldn&rsquo;t have to drive back to Renton for it (which
is a 30 minute to one hour drive from where I live in Redmond, depending on
traffic).  When I came back to pick up the car, I went to the service desk to
get the keys and request a copy of the service history and schedule so that I
would have it for my records (and to verify that they actually did the work).
The service advisor I talked to, whose name I think is Kay, asked me if I was
aware that the car had been in an accident and had had about $4,000 worth of
bodywork done. My heart leapt into my throat at this revelation, and I said that
no, I did <em>not</em> know that, and in fact I had been told that the car had <em>not</em>
been in any accidents.  She got an &ldquo;oh shit&rdquo; kind of look on her face and then
said she&rsquo;d double check, and after a bit of typing told me that actually she&rsquo;d
just typed the VIN in wrong, and that this car was fine.</p>

<p>This is what those of a literary predilection might call foreshadowing.</p>

<p>I was too relieved to really think too much of it at the time, and anyway the
contract had already been signed at this point, but knowing what I do now this
is obviously <em>hugely</em> suspicious.  Kay strikes me as a nice person, and I mean
genuinely nice rather than in a salesperson sort of way where niceness is
necessitated as a means of being persuasive.  I really want to believe that she
actually did just type in the wrong VIN and wasn&rsquo;t lying to me.  But&hellip; well,
let&rsquo;s do some math.</p>

<p>A VIN is 17 alphanumeric characters long, and each character has certain
restrictions on what it can be.  That means that there are 6.5273512 &times;
10<sup>25</sup> possible VINs.  That is a very, very large number.  VINs have
been in use since 1954, and the number of cars in the world just surpassed one
billion in 2011, but I think the source I got that from was only referring to
cars currently on the road.  So I think it&rsquo;s generous to assume that there have
been 10 billion cars with VINs since 1954.  Now, I was never very good at
statistics so this calculation is probably inaccurate for a host of reasons, but
by my math that means that if you type an arbitrary wrong digit when entering a
VIN, you have a 1.532015 &times; 10<sup>-16</sup> chance of getting a vehicle
that actually <em>exists.</em>  By way of comparison, that is 8 orders of magnitude
more unlikely than getting six of six numbers on the 6/49<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>.</p>

<p>I don&rsquo;t know all the details of how VINs really work; they&rsquo;re definitely not
uniformly distributed, and as I said, I was never very good at statistics
anyway.  So let&rsquo;s make this a little simpler.  The last six digits of a VIN are
sequential, and to the best of my knowledge, if all the other digits are fixed
then then all of the possibilities afforded by those last six digits should
refer to the same model of car, for the same model year, made by the same plant.
In North America the last five digits must be numeric, but since STIs are
manufactured in Japan, I think that gives us 33<sup>6</sup> possibilities
(because some characters are excluded), which is 1,291,467,969.  So again, the
possibility of typing a wrong digit in an arbitrary position and getting a car
that actually exists is very low.  But even assuming that she managed to do
that, I&rsquo;m fairly certain their service records only show cars that have actually
come to <em>that dealership</em> for service.</p>

<p><em>So how the fuck could she have possibly happened upon the same car, that came
to their dealership and got work done for an accident which probably would have
cost a similar amount to fix to the one my car was in, by typing in the wrong
VIN?</em> If anyone has a plausible explanation for this please do let me know, but
I just cannot believe that that really happened unless I have <em>incredible</em> bad
luck.</p>

<p>As I mentioned earlier, I didn&rsquo;t think too much of what Kay said at the time. I got the car; the brakes had been
replaced; things seemed fine.  Ken told me that the difference with the new
brakes was really noticeable and that he was glad they got that done for me.
I couldn&rsquo;t help but think &ldquo;Oh, you mean the same brake pads you and your manager
were telling me <em>didn&rsquo;t</em> need to be replaced when I bought the car from you?&rdquo;</p>

<p>The 3M service hadn&rsquo;t been done yet as it had to be scheduled in advance.  I
ended up waiting until the 8th of April to get that done.  When I dropped the
car off for that, I asked Kay to check if they had actually done the fluid
flushes they were supposed to, as the service record I&rsquo;d received from the last
time I picked the car up only indicated the brake replacement.  I hadn&rsquo;t noticed
that at the time because my mind was on the supposed accident damage that she
told me about.  She checked and sure enough they had <em>not</em> done the fluid
flushes, which they were contractually obligated to do.  She said that they&rsquo;d
get it done with the 3M service, and indeed they did (or at least they gave me a
service record indicating such&mdash;I don&rsquo;t really have the expertise to check
myself).  I wondered if they neglected to do this the first time on purpose,
hoping that I just wouldn&rsquo;t notice.  When I picked up the car the next time, Kay
told me she was really glad that they had done the rear differential fluid
flush, as the fluid had been <em>very</em> overdue for a change.  I think the word she
used to describe it was &ldquo;pudding&rdquo; or &ldquo;sludge.&rdquo;</p>

<p>Recall that this is the maintenance they told me their world-class technicians
hadn&rsquo;t felt it necessary to do. I&rsquo;m sure you can understand that my attitude at this
point was <strong>fuck these guys.</strong></p>

<h2>The Short-lived Honeymoon</h2>

<p>Finally, I had the car and all the service was done, and I was overjoyed. It was
a ton of fun to drive, and I quickly (in my opinion, anyway) became more adept
at driving a manual. I bought floor mats and Rally Armor mudflaps, which I
installed myself. My new car put a smile on my face every day; even the short
commute to work was a joy.</p>

<p>But I noticed a couple problems. First I noticed that the heated seat bottom on
the driver&rsquo;s side didn&rsquo;t work.  The back worked, but the bottom didn&rsquo;t get warm
at all.  I was annoyed that I hadn&rsquo;t noticed it during the test drive, but it
would be covered by the warranty, so I didn&rsquo;t consider it a big issue. Then, on
the 27th of April, my wife and I went to central Washington to escape the rain
and go hiking.  In contrast to the Seattle area, it was very warm in central
Washington that day, and the interior of the car was boiling from sitting in the
sun when we got back from our first hike of the day.  I turned on the air
conditioning and&hellip;  it was clearly not as cold as it should be.  It was no
colder than the regular air coming in from the exterior. This was even more
bothersome than the heated seat issue, but again I figured that it could be
fixed under warranty, so I didn&rsquo;t worry about it too much.</p>

<p>During the next week I also replaced the air filter (by myself, which I was
pretty proud of, even though it&rsquo;s about the easiest thing to change on a car)
and noticed that the air box had a large crack in it, and that the air intake
duct which goes into the air box had been broken in half height-wise and
shoddily glued back together with some kind of sealant.  I still didn&rsquo;t think
much of it at this point as I figured someone had damaged them while replacing
the air filter previously.</p>

<p>Finally, I booked a service appointment for May 3rd to get the heated seat and
air conditioning fixed at
<a href="http://www.eastsidesubaru.com/index.htm">Eastside Subaru</a> in Kirkland, which
is a lot closer to Redmond than Renton is.  I dropped the car off and they
called me back later in the day to inform me that they verified both of the
issues, but that while the heated seat problem could be fixed under warranty,
the air conditioner couldn&rsquo;t because the condenser had been
<strong>damaged in an accident.</strong></p>

<p>Ugh.</p>

<p>I went back to Eastside Subaru and asked them to point out how they knew it was
accident damage, since Walker&rsquo;s had told me the car had not been in an accident.
The technician who serviced the car came out and pointed out several things to
me.  The tubes from the AC condenser were bent in such a way that it was obvious
to him that there had been an impact, and they leaked badly. Moreover, the
condenser itself was quite obviously bent.  There are tool marks on the bolts
that hold on both of the front quarter panels, indicating that they&rsquo;ve been
removed to be repaired or replaced.  There&rsquo;s an AC recharge sticker on the
inside of the hood which appears to have been glued on, not very well, so it&rsquo;s
peeling off; I believe the technician also said that he thought the whole hood
had likely been replaced.  The power steering fluid reservoir attaches to the
body of the vehicle in two places and one of those was cracked. The radiator
support bar is also bent. It&rsquo;s slight enough that the untrained eye would
probably not notice it, but the technician at Eastside told me, and I am very
confident that these were his exact words<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup>, that Walker&rsquo;s &ldquo;had to have
known&rdquo; that the vehicle was in an accident.</p>

<p>I drove back down to Renton and spent probably about half an hour yelling at
various people.  Ken tried to placate me in various ways; he told me that they
didn&rsquo;t know and that they couldn&rsquo;t have known; he mentioned that &ldquo;my guy&rdquo; didn&rsquo;t
notice the problem either; he tried to tell me that this wouldn&rsquo;t actually
decrease the resale value of the car (bullshit) and that since it&rsquo;s not on the
CarFax or title no one needs to know anyway. He made repeated use of euphemisms
implying that maybe there <em>wasn&rsquo;t</em> actually any damage and the car <em>hadn&rsquo;t</em>
actually been in an accident, even after I <em>showed him</em> the damaged parts. He
seemed to be acting almost as though if I simply willed it hard enough I could
bring about some alternate reality wherein my car was pristine and undamaged.
(Believe me, I tried.) This, to me, emphasizes the problem with people like Ken
and his manager and, as I&rsquo;ll soon describe, his manager&rsquo;s manager&mdash;that is
to say, salespeople&mdash;they have an atypical understanding of the concepts of
<em>facts</em> and <em>truth</em> and act as though reality is open to interpretation.</p>

<p>I told Ken that I refuse to lie to someone when I sell the car (and let this
post be a testament to that, because it is now public knowledge, whether or not
it ever shows up on the CarFax) and that I felt that I was probably out
thousands of dollars in resale value, not to mention the fact that I have no
idea what kind of mechanical issues this could result in down the road. My
confidence in my extended warranty has also gone down the drain, because if
anything fails and can be shown to have signs of accident damage, even if it&rsquo;s
very minor, then it won&rsquo;t be covered.</p>

<p>I made it clear that I wanted them to take the car back and refund me the entire
purchase price including the extended warranty, 3M treatment, and taxes I paid.
That didn&rsquo;t even account for the hundreds of dollars I had already put into the
car (mud flaps, floor mats, air filter, etc); I didn&rsquo;t care, I just wanted to
cancel the transaction and be done with it.  We argued for a while, but it was
fairly late on Friday afternoon and he told me that there was no one at the
dealership who could make that decision at that time. He said that he&rsquo;d get the
general manger to call me back the next day before noon. I asked him to tell the
GM that I would be talking to an attorney if I didn&rsquo;t get the answer I wanted,
and left. From this point until the beginning of June, I completely stopped
driving the car, as I wanted to ensure the strength of my case by minimizing the
number of miles I put on the car.</p>

<p>That Saturday I had plans to go hiking, and I didn&rsquo;t want to cancel them just
for a phone call that probably wouldn&rsquo;t go anywhere, so I called the dealership
early in the morning.  Ken wasn&rsquo;t there yet, but I left a message for him saying
that I may not be available to answer the phone but that he could leave me a
message.  Nobody called me on Saturday, and in fact I haven&rsquo;t spoken to Ken at
all since that Friday, the 3rd of May.  On Monday, the 7th of May, I called back
and asked to speak to the general manager,
<a href="http://www.linkedin.com/pub/james-capestany/11/b84/772">James Capestany</a>.  I
ended up having more or less the same conversation with him that I had with Ken.
He was and is adamant that the dealership didn&rsquo;t know that the car was in an
accident, and further, that it&rsquo;s not their responsibility to know.  He pointed
out that the salespeople do not have mechanical qualifications.  I asked him why
his <em>technicians</em> failed to thoroughly inspect a car which costs upwards of
$30,000 when they took it as a trade-in.  He gave me a completely unsatisfactory
answer which I don&rsquo;t quite recall.  I told him that I had read the sale
contract, including the provision for trade-ins which states that the party
trading in the car warrants that it has not had any undisclosed damage requiring
bodywork, and asked why he was screwing me instead of taking the car back and
going after the person who clearly violated that contract when he traded it in.
I don&rsquo;t recall his answer to this question either, except insofar as it also
being unsatisfactory.</p>

<p>As Ken did, the James tried to convince me that the accident wouldn&rsquo;t affect the
resale value of the car that badly.  I said that if he were confident that that
was the case, he should have no problem with me getting it appraised by another
Subaru dealership and then having Walker&rsquo;s compensate me for the difference in
value.  He replied, somewhat angrily I think, &ldquo;No, I&rsquo;m not gonna do that.&rdquo;  I
told him that I held the dealership responsible for their failure to thoroughly
inspect the car, and that I would be talking to a lawyer if they wouldn&rsquo;t refund
me or at least compensate me for the depreciation.  He stated that I could talk
to a lawyer if I wanted to, but that the
<a href="http://apps.leg.wa.gov/rcw/default.aspx?cite=46.70.180">RCW (i.e. state law) on the matter</a>
states that they are only liable if they don&rsquo;t disclose damage that they know
about, and he reiterated that they did not know.</p>

<p>Even to this date, I am unsure of whether or I believe that. I am a firm
believer in Hanlon&rsquo;s razor (&ldquo;Never attribute to malice that which is adequately
explained by stupidity&rdquo;), but the odds I calculated above make me incredulous
that Kay didn&rsquo;t actually have some record of the accident, in which case they
obviously would have to have known. The dealership has shown me, as &ldquo;proof&rdquo; that
they didn&rsquo;t know, copies of reports run in December of 2012 which indicated that
the car had a clean record. But still, I&rsquo;m incredulous that <em>nobody</em> noticed
the damage before I took the car to Eastside Subaru. The technicians at Walker&rsquo;s
should have done a thorough inspection as Ken and Jan assured me they did, so
either someone lied about the damage, or their technicians neglected to do their
duty, or they are incompetent. And what of the other customers who must have
looked at the vehicle before I did? When I was selling my Civic after I bought
the STI, two of the three people who test drove it had some mechanical
experience and identified some potential issues with the vehicle that I wasn&rsquo;t
aware of. Did nobody more knowledgeable than I look at this STI and notice the
damaged parts?</p>

<p>Either way, I told James that I would be talking to a lawyer.  He told me that
he&rsquo;d try to get in touch with the previous owner of the vehicle, and that he&rsquo;d
pull up the repair order from when it was first traded in to see if they had any
indication that the car may have been in an accident. Ultimately he wasn&rsquo;t able
to get in touch with the previous owner, but I&rsquo;m not sure what difference it
would have made. If that guy had any common sense whatsoever, he would have lied
about the accident since knowingly trading the car in without disclosing the
accident is a violation of the trade in contract.  And even if he had told the
truth, what then? Would Walker&rsquo;s have sued him if <em>he</em> refused to compensate me?
I doubt it.</p>

<p>Later that same day, James called back. He asked me to explain again what
Eastside Subaru told me about the air conditioning.  When I mentioned that they
said they couldn&rsquo;t warranty the part because of accident damage, he said that
that&rsquo;s not true and he didn&rsquo;t know why they&rsquo;d say that.  He said that they just
changed management and probably didn&rsquo;t know what they were doing, and that
Walker&rsquo;s has been in business for 25 years.  He told me if I brought the car
down he would replace the AC condenser under warranty.  I told him that that was
not my primary concern and that it wouldn&rsquo;t be good enough.  He accepted that,
but pointed out that I still needed to get the AC fixed and that he could have
it done under warranty.</p>

<p>Obviously what James told me about the condenser being replaceable under
warranty was not true. I looked it up after I got off that call and
this is what the Subaru warranty says:</p>

<blockquote><p>These warranties do not cover any part
which malfunctions, fails or is damaged due to objects striking the vehicle,
road hazards, whether on or off the road, <strong>accident</strong>, fire, neglect, abuse or
any other cause beyond the control of [Subaru of America].</p></blockquote>

<p>(Emphasis mine.) This is obviously exactly what I expected since no warranty
ever in the history of automobiles, as far as I can fathom, has covered accident
damage.  Otherwise there would be no reason for any type of insurance other than
liability insurance. When I talked to him next I asked James to explain this
discrepancy, and he said that while &ldquo;the letter of&rdquo; the warranty agreement said
one thing, it was open to interpretation and it was a matter of customer service
and reputation to do warranty replacements in situations like this.</p>

<p>Maybe I&rsquo;m splitting hairs at this point, but what James was offering was <em>not a
warranty replacement</em>, and I know that for a fact because as part of the
eventual resolution of this nightmare, I did get Walker&rsquo;s to replace the
AC condenser, and the amount charged is listed as &ldquo;Internal&rdquo; rather than
&ldquo;Warranty&rdquo; on the service record. I do think the distinction is important
because it means that the dealership, rather than Subaru of America, is paying
for the new part, and it&rsquo;s not a cheap part. Although offering to replace the
condenser is not an admission of <em>legal</em> liability, he obviously would not offer
it if he truly felt that his shop was guiltless in this, because the repair
comes out of his bottom line. So again, he&rsquo;s <strong>directly lying to me,</strong> and
throwing Eastside Subaru under the bus at the same time.</p>

<p>I readily admit to being a bit na√Øve in some respects, but it&rsquo;s still shocking
to me that there are people who will do that.</p>

<h2>Lawyer Up</h2>

<p>I wasn&rsquo;t bluffing about talking to a lawyer. I have a group legal plan through
work which covers all my legal fees for applicable issues, which include
consumer protection cases. Unfortunately there is also a downside to the group
legal plan: it somewhat limits one&rsquo;s choice of lawyer, and even among the
limited selection of in-network lawyers within a reasonable distance, many are
very busy. Thus, there&rsquo;s no guarantee that you&rsquo;ll get a <em>good</em> lawyer.</p>

<p>I do not think that I got a good lawyer.</p>

<p>I had to call several lawyers before I was able to find one who would take on
the case. One of the lawyers who called me back but couldn&rsquo;t take the case was
kind enough to provide me with some basic information.  He said that he thought
I had a good case under the Washington state consumer protection law.  He said
that the dealership&rsquo;s failure to thoroughly inspect the car before selling it
and claiming it had not been in an accident could be considered an unlawful
&ldquo;deceptive act&rdquo; under
<a href="http://apps.leg.wa.gov/rcw/default.aspx?cite=19.86.020">RCW 19.86.020</a>.
He also pointed out that the Consumer Protection Act allows for triple damages
up to a maximum of $25,000, which might have been useful leverage in my
discussions with James, but I never actually mentioned it to him  because the
lawyer who eventually took on the case didn&rsquo;t think much of its applicability.</p>

<p>In fact, the lawyer I did eventually end up hiring didn&rsquo;t initially think that I
had a case at all (but didn&rsquo;t tell me this until I had already hired her). She
was essentially in agreement with James that the dealership would only be liable
if they knew about the accident before selling the car to me, and since we would
likely not be able to prove that even if it were true<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>, we would
have no case.</p>

<p>I did some research of my own and discovered a few other laws which might be
applicable. I won&rsquo;t bother mentioning all of them, but I felt that the strongest
was the
<a href="http://www.atg.wa.gov/ConsumerIssues/Cars/UsedCars.aspx#implied_warranty">Implied Warranty of Merchantability</a>.
My understanding is that this state law applies to consumer goods in general,
but as it relates to cars in particular, it states that vehicles sold by
dealerships &ldquo;must be fit for ordinary driving purposes, free of major
defects, reasonably safe, <strong>and of the average quality of similar vehicles
available for sale in that price range.</strong>&rdquo; (Emphasis mine.) In my opinion, given
the depreciation and damaged components, my car obviously did not meet those
standards, but my lawyer still felt that it would be an uphill battle. And of
course, even if I prevailed in arbitration or court, there would be no guarantee
that the dealership would be required to offer anything beyond repairing the AC
condenser.</p>

<p>My lawyer agreed to write a letter to the dealership on my behalf, and that if
they did not respond favourably, we could take them to arbitration. I sent her
all of the documents necessary for the letter on May 15th, and followed up on
May 20th to check on her progress. She told me that she would be working
on the letter soon. I sent her another email on the 24th, but didn&rsquo;t hear back
from her until the 7th of June when I let her know that I would no longer need
her services. Good help is hard to find.</p>

<h2>Resolution</h2>

<p>Luckily lawyers are not the only means of gaining leverage against corporations.
I also contacted <a href="http://www.king5.com/news/get-jesse">Jesse Jones</a> of King 5
News, and filed complaints with Subaru of America, the Better Business Bureau,
and the Washington State Attorney General&rsquo;s office. I didn&rsquo;t get a call back
from Jesse, but the other three seem to have had an effect. I exchanged several
emails with a representative from Subaru who contacted the dealership on my
behalf to try to mediate a resolution. The representative didn&rsquo;t seem to have
much actual power over the dealership, but she was courteous and timely, seemed
sympathetic to my concerns, and made a real effort to do what she could, so I
certainly appreciate that.</p>

<p>The complaint to the Attorney General&rsquo;s office seemed to have more of an effect.
Not long after Walker&rsquo;s received it, James called me back and offered to write
me a cheque to cover some of the depreciation in addition to fixing the air
conditioner, as long as I would sign a document releasing the dealership from
all liability relating to the matter. Given that I had been fighting with the
dealership for a month and that my lawyer had gone <acronym title="Away WithOut
Leave"> AWOL</acronym>, I readily accepted this offer.</p>

<p>I took the car back to Eastside Subaru to determine what the depreciation would
actually be. Given the lack of mechanical damage, the absence of records of the
accident, the fact that the damage was almost completely repaired, and the
rarity of the STI sedan, I was told that the depreciation would probably not be
more than $1,000 to $1,500. This seemed low to me, but I discussed it with a
friend who is very knowledgeable about cars and he felt that it was not
unreasonable. If you disagree with this, please <strong>do not</strong> tell me, because at
this point I don&rsquo;t want to know. (Ignorance is bliss.) I took the car back to
Walker&rsquo;s on the 4th of June, and they ended up fixing the AC condenser and air
intake duct and giving me a cheque for $1,000.</p>

<p>In the interest of fairness I will say that I did have a fairly positive
experience at the Walker&rsquo;s Renton Subaru service department when I took my
vehicle in for the repairs. The service advisor I dealt with,
<a href="http://www.dealerrater.com/sales/Brad-Hallock-review-33465/">Brad Hallock</a>, was
very courteous and helpful. Of course, that doesn&rsquo;t come close to excusing the
rest of my experience with the dealership, particularly given that it was the
Walker&rsquo;s Renton Subaru service technicians who ostensibly inspected the vehicle
when they bought it.  While I was picking up my car after the service was
finished, I overheard another service advisor talking about the &ldquo;world class
inspection&rdquo; that they were going to do for another customer. I was tempted to
interrupt and tell the customer about my experience with their &ldquo;world class
inspection,&rdquo; but to my shame, I&rsquo;m too non-confrontational to do something like
that. It&rsquo;s a flaw that I need to work on.</p>

<p>I am fairly satisfied with the compensation I received, and overjoyed to be able
to put this ordeal behind me. At this point I consider the matter to be closed.
The Attorney General&rsquo;s office has closed their file on the case, and as soon as
Walker&rsquo;s responds to the Better Business Bureau complaint, I will close that as
well. I am looking forward to never having any contact with them again.</p>

<p>That said, I am absolutely not satisfied with how the dealership handled the
issue in the month between my discovering the problem and them finally giving me
some compensation. (Otherwise I would not be writing this, of course.) I spent
far too much time fighting with them. At every juncture I encountered
dishonesty, self-interest, and a complete refusal to accept responsibility for
the failure of their technicians to thoroughly inspect the car. Between
the time I spent playing telephone tag with the general manager, the time to
find and hire a lawyer, the time spent on filing complaints with third parties,
and the disruption of my schedule resulting from the loss of use of my vehicle
for nearly a month<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup>, I probably wasted more than a dozen hours on this,
and it certainly impacted my productivity at work as well.</p>

<p>When I was buying the car, Ken and Jan repeatedly assured me of the quality of
Walker&rsquo;s inspections and servicing, and the qualifications of their technicians.
When it turned out that those technicians had missed significant accident damage
which was still present on the vehicle and should have been easily discoverable
by a qualified technician, nobody at the dealership would stand behind those
claims of excellence; they repeatedly insisted that they could not have known
and were not responsible. I find this appalling, though I guess I shouldn&rsquo;t find
it shocking. When I asked why they would take such an expensive vehicle as a
trade-in without doing a thorough inspection, I was told that since the CarFax
didn&rsquo;t indicate any problems, they had no reason to suspect that there would be
anything wrong with the vehicle.</p>

<p>I don&rsquo;t understand why I had to fight with the dealership about this <em>at all</em>.
They should have just refunded the sale completely as soon as I raised the issue
with them, and gone after the original owner to recoup their losses, who was
<em>clearly</em> in violation of his sale contract.</p>

<h2>Lessons Learned</h2>

<p>I hope this doesn&rsquo;t sound histrionic, because it is completely genuine, but I
was also emotionally affected by all of this. I tend to be very trusting and
give people the benefit of the doubt with respect to their motivations. I am
ill-equipped to deal with salespeople because I am not naturally inclined to
assume that someone will mislead me and take advantage of me out of
self-interest. I expect cold, detached, exploitative behaviour from large
corporations, but Walker&rsquo;s really isn&rsquo;t that large, and these were <em>real people</em>
with whom I had face-to-face conversations, who had the power to do the right
thing but were unwilling to. The whole experience has made me more cynical.
Moreover, the feeling I hate more than any other is powerlessness, and I found
it simultaneously frustrating and discouraging to be in a situation where for a
long time I seemed to have practically no recourse against the dealership for
the losses I&rsquo;d suffered due to their incompetence.</p>

<p>I&rsquo;ll never again enjoy my car as much I did for the first two months I owned it,
and although I&rsquo;ve been reassured that Subarus are built like tanks, I&rsquo;m not
sure I&rsquo;ll be able to completely get past the paranoia that every tiny creak or
shudder might be forewarning of some impending catastrophic failure. But on the
bright side, I do still love the car. I was worried that I&rsquo;d hate it after all
of this because of the negative associations with all the time I wasted and
frustration I experienced, but that isn&rsquo;t the case. It&rsquo;s still a ton of fun to
drive. I&rsquo;m looking forward to finally taking it on its inaugural road trip, to
modding it and making it my own, and to spending many hours &ldquo;going Subaruing.&rdquo;</p>

<p>And, with every negative experience comes the silver lining of life lessons to be
learned, and this is no different. Here are my takeaways from this:</p>

<ul>
<li>A clean record from CarFax and other similar services is completely
meaningless. Anything not reported to insurance or the police will not show
up on a CarFax report, and in my case, I have reason to believe that an
insurance claim and police report <em>were</em> made for the accident my vehicle
was in, and CarFax <em>still</em> shows nothing<sup id="fnref:7"><a href="#fn:7" rel="footnote">7</a></sup>.</li>
<li>Mechanics can be similarly unreliable. Ideally one should have a trusted
mechanic whom they&rsquo;ve dealt with previously. I haven&rsquo;t lived in Washginton
long enough to know any mechanics well, so I should have asked friends who
are knowledgeable about cars for recommendations instead of just picking one
based on Yelp reviews.</li>
<li>Even if you don&rsquo;t know much about cars, there are certain things you can
look for under the hood when buying a used car which may indicate that the
vehicle was in an accident or had bodywork done. Check for tool marks (i.e.
missing paint) on the bolts under the hood. Check for damaged plastic
components. Some vehicles (although I don&rsquo;t think mine is among them,
unfortunately) have the VIN stamped on major components; if any of the VINs
are missing or don&rsquo;t match, something is up.</li>
<li>I&rsquo;m not sure if this is a fair generalization based on this one experience,
but if I were to buy another used car I would be very suspicious of vehicles
which are overdue for important maintenance, as it may indicate that the
seller did not thoroughly inspect the vehicle or does not care to maintain
it himself.</li>
<li>I am by no means an expert negotiator so take this with a grain of salt as
well, but I suspect that immediate face-to-face negotiation is not the best
way to go. It suggests a desire to buy a vehicle quickly, and the more time
one spends negotiating, the less willing one will be to walk away due to the
lost investment of time. It is probably better to tell the dealership what
you are willing to pay and immediately leave if they won&rsquo;t meet that demand.
Either they&rsquo;ll call you back with a good offer, or you can continue to look
elsewhere.</li>
<li>Buying a new car means suffering immediate depreciation, but it&rsquo;s also much
less likely to result in nasty surprises like this. Many states have lemon
laws to protect new car buyers from troublesome cars, but these rarely apply
to used cars. Consider whether this tradeoff is worthwhile. Personally, I&rsquo;ll
definitely be looking at new cars next time I buy a vehicle.</li>
<li>And most importantly, when legal options don&rsquo;t pan out, the best way to get
what you want from a corporation may simply be to be persistent and annoying
enough that it becomes worth their money to solve your issue just to make
you go away.</li>
</ul>

<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>The STI is only available with a six-speed manual transmission, but I was specifically looking for a manual car anyway. One might wonder why I&rsquo;d seek out a manual even when I hardly knew how to drive them.  The answer is that I&rsquo;d always been intrigued by manual transmissions, and after taking a quick lesson I was set on buying a manual because I found it to be a lot of fun. Plus, without simply jumping in and buying a manual car, one has limited opportunity to learn&mdash;you can only spend so much time borrowing friends&#8217; vehicles, and lessons are expensive.  (For those of you outside of North America, manuals are fairly rare here, accounting for less than 7% of yearly sales. They can&rsquo;t be rented at all because most people, particularly younger people, don&rsquo;t know how to drive them, so the rental companies would be constantly replacing burnt-out clutches and ground up gears if they did offer manual vehicles.) Unfortunately, being inexperienced at driving manual may have influenced me to make the purchase faster than I otherwise might have, as it&rsquo;s embarrassing to go on a test drive and stall the car several times, and I was worried that if I couldn&rsquo;t borrow a car to practice before subsequent test drives I&rsquo;d do an even worse job of it.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>Between the first round of negotiation and the second, my friend had to leave due to a commitment&mdash;not to mention the excruciating tedium of sitting their listening to me negotiate the price of a car. My wife joined me when I went back to the dealership.<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>The 6/49 is a national lottery in Canada, for those of you from other countries.<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
<li id="fn:4">
<p>NB for legal purposes: <em>his words</em>, not mine.<a href="#fnref:4" rev="footnote">&#8617;</a></p></li>
<li id="fn:5">
<p>The sale contract contains an arbitration clause, and there is no discovery process in arbitration, so even if the dealership has evidence of the accident we would likely not have been able to get it.<a href="#fnref:5" rev="footnote">&#8617;</a></p></li>
<li id="fn:6">
<p>This was admittedly perhaps an unnecessary step on my part, but at the time I felt that it was the safest thing to do, and it would never have been a problem had the dealership not sold me a damaged vehicle in the first place.<a href="#fnref:6" rev="footnote">&#8617;</a></p></li>
<li id="fn:7">
<p>With my luck it will probably show up on the report around the time I go to sell the car&hellip; not that it makes much of a difference, since as I mentioned previously, I refuse to lie prospective buyers about my knowledge of the accident.<a href="#fnref:7" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Photo App Progress Update]]></title>
    <link href="http://blog.mlindgren.ca/entry/2012/11/14/photo-app-progress-update/"/>
    <updated>2012-11-14T22:58:00-08:00</updated>
    <id>http://blog.mlindgren.ca/entry/2012/11/14/photo-app-progress-update</id>
    <content type="html"><![CDATA[<p>In September I <a href="http://blog.mlindgren.ca/entry/2012/09/14/social-networks-and-content-ownership/">wrote about</a>
my intention to develop a web application to share my photos. I made good
progress on it throughout September and early October, but for various reasons I
haven&rsquo;t been able to work on it much in the past month or so. Last weekend,
though, I was able to solve some blocking issues which were preventing me from
doing an alpha release. Those being dealt with, I&rsquo;ve now got a few of my albums
up at <a href="http://photos.mlindgren.ca/">photos.mlindgren.ca</a>; take a look and leave
a comment if you have any feedback.</p>

<p>I haven&rsquo;t released the source code yet as there&rsquo;s still a great deal of work to
be done, and I&rsquo;m generally of the belief that dumping a bunch of unfinished,
messy code on Github with the hope that the community will sort it out is of
little benefit to anyone. My goal at this point is to do a beta release in a
two to three months or so and release the code at that point. That timeline is
anything but firm, though. This project is turning out to be much more work than
I expected (as projects are wont to do), and I expect to be fairly busy over the
next couple months.</p>

<p>Anyway, with the alpha version up and running, this seems like a good
opportunity to reflect on some of the issues I&rsquo;ve faced that complicated the
project, and on what remains to be done.</p>

<h2>Wand and the OOM Killer</h2>

<p>I mentioned in my
<a href="http://blog.mlindgren.ca/entry/2012/09/14/the-state-of-python-imaging/">post on Python imaging libraries</a>
that I&rsquo;m using <a href="http://dahlia.kr/wand/index.html">Wand</a> to resize and transform
uploaded photos. It&rsquo;s very convenient and easy to use, and from a
maintainability and ease of use perspective I much prefer using Python bindings
for ImageMagick to shelling out to the ImageMagick executable. One
of my goals for this project is that other people should be able to install it
on their own servers with relative ease, and I suspect relying on ImageMagick
executables for image processing would lead to cross-platform and configuration
issues.</p>

<p>But, Wand is not yet a mature library and it has some significant issues of its
own. First and foremost, when I started using it it had some major memory
leaks. I found and fixed more than 10 leaks and submitted a pull request which
was merged into the main repository&mdash;however, there hasn&rsquo;t yet been an
official release including my fixes yet, so pip installs and downloads from the
Wand website will still include those leaks.</p>

<p>I&rsquo;m not sure if I got all of the leaks or if more still remain. The ones I fixed
were discovered mostly through ad-hoc testing and reading the code. I&rsquo;ve been
running my app for several days now and the memory consumption when it&rsquo;s idle
has stayed flat, so I believe I&rsquo;ve removed at least the most common leaks, but I
haven&rsquo;t had a chance to sit down with Valgrind yet and run the Wand unit tests
through it to make sure that I got <em>all</em> of the leaks. I&rsquo;ll have to do that
before I do any sort of public release of my software;
I don&rsquo;t want to rely on a leaky library.</p>

<p>Beyond the leaks, I ran into another memory issue which proved problematic:
resizing photographs can use a great deal of memory, which is extremely limited
on a reasonably-priced <acronym title="Virtual Private Server">VPS</acronym>.
I have limited knowledge about image processing in general and ImageMagick in
particular, but I&rsquo;m not aware of any resizing algorithms which can operate
directly on compressed image data, and if any such algorithms exist, ImageMagick
doesn&rsquo;t use them. That being the case, to resize an image, the entire image has
to be loaded into memory decompressed. For an 8 megapixel photograph at 24 bits
per pixel, that means allocating approximately 183MB of memory.</p>

<p>On a 512MB VPS, this means that trying to resize three images
concurrently&mdash;or even sequentially in some cases, since Python isn&rsquo;t
guaranteed to immediately relinquish allocated memory to the operating system
when objects resident in that memory are &ldquo;deleted&rdquo;&mdash;practically guarantees
that the process will be killed by the
<acronym title="Out Of Memory">OOM</acronym> killer.</p>

<p>This goes hand in hand with another complication, which is that resizing images
is too slow to be done in the same server thread that&rsquo;s handling requests and
generating responses. For each image that&rsquo;s uploaded, I save several different
sizes for different purposes, and due to the aforementioned memory constraints I
can&rsquo;t even resize them concurrently. Resizing each image several times in the
responding thread drastically reduces throughput for the client
since it incurs a significant wait time for the server to process each image
after it&rsquo;s uploaded.</p>

<h2>Enter Subprocess</h2>

<p>So here&rsquo;s the solution I&rsquo;ve come up with for the time being, and I&rsquo;m very unsure
whether or not it&rsquo;s actually a good solution, so please do let me know in the
comments if there&rsquo;s a better way to do this.  When a new image is uploaded, the
responding thread saves the image in the appropriate directory and adds it to
the database, but does not resize it.  For each of the sizes that the image
needs to be resized to, it adds a task to a
<a href="http://docs.python.org/2/library/queue.html">synchronous queue</a>. The queue is
consumed by a different thread which runs throughout the lifetime of the
application. That thread maintains a (thread-local) queue of
<a href="http://docs.python.org/2/library/multiprocessing.html">subprocesses</a> with a
configurable maximum length. When a new resizing task is consumed, if there is
room in the subprocess queue, a new subprocess is spawned to resize the image.
Otherwise, the thread joins the subprocess at the front of the queue so as to
block until there&rsquo;s room to spawn a new subprocess. The exit code of completed
processes is checked to ensure that the resize was successful; in case of
failure, the task is re-added to the back of the task queue.</p>

<p>This guarantees that the application server itself will never be killed by the
OOM killer since it uses minimal memory. It never has to load images into
memory; all of that is done in the resizing subprocesses.  By configuring the
maximum number of concurrent subprocesses, one can scale this solution according
to available resources: if you have plenty of RAM, you can resize many images
concurrently and get through the queue faster, or if you have very little, you
can limit the queue to one or two processes to minimize the chance that anything
will be OOM killed.</p>

<p>The subprocess spawning notwithstanding, this is a pretty standard task queue
model, so you might be wondering why I didn&rsquo;t use something like
<a href="http://celeryproject.org/">Celery</a> in conjunction with a real message queue.
It comes down to minimizing the number of external dependencies and maximizing
ease of use. My project already depends on a number of libraries which will have
to be installed by users. To the greatest extent that I can do so without
compromising on features, I want to avoid complicating the installation further
by adding more dependencies. Celery is particularly difficult to install as it
requires installing and configuring a broker and managing processes for both the
broker and Celery itself. Were I writing a large-scale service and maintaining a
single backend for hundreds of users, it would probably be the right choice, but
as I am writing software for users to install on their own servers, it is
probably not.</p>

<p>This method works fairly well and it&rsquo;s the best I&rsquo;ve come up with so far, but
something about it makes it feel more like a hack than a well thought out and
robust solution. I also wonder if it defeats the purpose of using Wand in the
first place; I use it for very little other than resizing, and since I&rsquo;m going
to the trouble of spawning subprocesses to do that, perhaps it would actually be
better to just directly invoke the ImageMagick binaries. As mentioned above, I
have concerns about what impact that would have in different environments, but I
haven&rsquo;t really validated those concerns; they&rsquo;re just hunches.</p>

<h2>The Road Ahead</h2>

<p>So I&rsquo;ve got a workable, if not perfect, solution to one of the biggest problems
I encountered&hellip; but as I mentioned previously, there&rsquo;s still much work to be
done. Here are a few (but not all) of the things I&rsquo;d like to do before I release
anything publicly:</p>

<ul>
<li><strong>Lots of UI work.</strong> Right now the app works very poorly on phones and iPads.
I also need to figure out how to make certain features more discoverable, and
although I&rsquo;m happy with how albums look right now, there are still some extra
touches that I want to add which I haven&rsquo;t yet been able to (because CSS and
HTML suck.)</li>
<li><strong>Better administrative tools.</strong> Uploading works great, but I have very
barebones interfaces for editing albums right now. There is currently no means
of rotating a photo from the editing interface (although doing so should
almost never be necessary since the app automatically rotates images which
have EXIF orientation data.)</li>
<li><strong>Mirroring and proxying to cloud storage services</strong> such as Azure and S3. VPS
resources are very expensive; extra disk space on some popular hosts runs
around a dollar per gigabyte per month. That&rsquo;s ten times the cost of disk
space on the cloud storage services I&rsquo;ve looked at. Cloud-hosted images might
also improve load speeds for visitors.</li>
<li><strong>Comments.</strong> This one is pretty big, obviously, but I haven&rsquo;t added it yet
because I can&rsquo;t decide on how best to handle it. I&rsquo;d like to avoid writing my
own comment system and requiring potential commenters to sign up for yet
another account. (I&rsquo;d use Persona for commenter identification and
authentication just as I do for the admin login, but very few people currently
have Persona accounts or even know what it is.) I like Disqus, but I&rsquo;m not
sure it would integrate well with the minimalist interface I&rsquo;ve designed.</li>
<li><strong>Geotagging and maps.</strong> I&rsquo;m already reading GPS data from EXIF tags where
available, but now I need to do something with it. I&rsquo;d like to add the ability
to manually add locations to photos and albums, and to have a map that shows
where photos were taken.</li>
</ul>


<p>Those five items represent maybe a quarter to a third of the work I still have
planned, so to repeat myself again, there&rsquo;s a lot of work to do. But I&rsquo;m very
happy with the progress I&rsquo;ve made so far, and I feel confident that I can get
this finished. It&rsquo;s just a matter of when.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why Mozilla Persona Is the Right Answer to the Question of Identity]]></title>
    <link href="http://blog.mlindgren.ca/entry/2012/10/03/why-mozilla-persona-is-the-right-answer-to-the-question-of-identity/"/>
    <updated>2012-10-03T20:37:00-07:00</updated>
    <id>http://blog.mlindgren.ca/entry/2012/10/03/why-mozilla-persona-is-the-right-answer-to-the-question-of-identity</id>
    <content type="html"><![CDATA[<p>David Somers presents an
<a href="http://labs.newsint.co.uk/blog/2012/10/why-mozilla-persona-is-the-right-answer-to-the-question-of-identity/">excellent rundown</a>
of what
<a href="http://www.mozilla.org/en-US/persona/">Mozilla Persona</a> is and why it&rsquo;s
currently the best option for identity and authentication for web services. I&rsquo;ve
implemented authentication using Persona in the
<a href="http://blog.mlindgren.ca/entry/2012/09/14/social-networks-and-content-ownership/">photo album app</a>
I&rsquo;m working on, and I found it remarkably easy to integrate with my app. And, as
David explains, Persona is also much easier for users to understand than
competing platforms like OpenID. If you&rsquo;re a web developer, you really need to
add Persona support to your application as soon as
possible. It can be done in literally a matter of minutes, and if Persona takes
off the benefit to identity management on the Internet could be huge.</p>

<p>Perhaps my favourite thing about Persona is that it gives me the opportunity to
<a href="https://developer.mozilla.org/en-US/docs/Persona/Implementing_a_Persona_IdP">implement my own identity provider</a>,
which means I can have <em>complete</em> control over how I authenticate to any
Persona-consuming service. I could have <em>n</em>-factor authentication, with no limit
on the complexity or specificity of the factors besides my own imagination. For
example, I could generate SSL client certificates for each of my machines and
hardcode their thumbprints into my identity provider to ensure that it wouldn&rsquo;t
even service requests from machines I haven&rsquo;t explicitly added.  Or if I wanted
to get creative, I could have my identity provider generate a random temporary
key which I would have to retrieve via SSH (but this is less convenient and
probably also less secure than doing SSL client authentication.) The
possibilities are endless.</p>

<p>Perhaps an end is finally in sight to the frustration of having dozens upon
dozens of different accounts and passwords for various services,
<a href="http://me.veekun.com/blog/2011/12/04/fuck-passwords/">each with its own uniquely nonsensical password composition policy</a>.  Everyone needs to implement Persona&mdash;preferably yesterday.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Switching to Octopress]]></title>
    <link href="http://blog.mlindgren.ca/entry/2012/09/23/switching-to-octopress/"/>
    <updated>2012-09-23T23:22:00-07:00</updated>
    <id>http://blog.mlindgren.ca/entry/2012/09/23/switching-to-octopress</id>
    <content type="html"><![CDATA[<h2>Backstory</h2>

<p>I&rsquo;ve been using Wordpress on various sites that I&rsquo;ve maintained for probably the
better part of a decade now. By most metrics, it&rsquo;s still very good blogging
software; I&rsquo;m not aware of any self-hostable alternative that can match
Wordpress in terms of the union of ease of use, feature set and flexibility that
it provides. That said, lately I&rsquo;ve been feeling that perhaps Wordpress is no
longer the right choice for my specific needs. These are my problems with it:</p>

<ul>
<li>It&rsquo;s not very good for sharing source code. There are a multitude of plugins
available for syntax highlighting; the best of them seems to be
<a href="http://alexgorbatchev.com/SyntaxHighlighter/">Alex Gorbatchev&rsquo;s Syntax Highlighter</a>,
which is used by
<a href="http://wordpress.com">Wordpress.com</a> and is also what I was using on my blog.
But I&rsquo;ve had problems with the Wordpress converting some of the characters in
my code to HTML entities (e.g. <code>&amp;amp;</code> for &amp; ) which are then printed
literally by the plugin.</li>
<li>I find that more often than not Wordpress&#8217; visual editor is
insufficient for the formatting I want in my posts. That forces me to use
the raw HTML editor. That would be fine, except that Wordpress has a strange
sort of off-spec way of storing post HTML. Paragraph and line break tags are
omitted in the editor and the database, and are added when the page is
actually rendered to the client. This is okay, I guess, and I <em>think</em>
Wordpress is smart enough to not insert extra paragraph tags if you do wrap
your own paragraphs with them. Still, it leads to some unpredictability with
regard to how a post with hand-written HTML will actually be rendered.</li>
<li>A similar but worse problem occurs when you try to insert extra line breaks.
Even if you&rsquo;re using the raw HTML editor to insert <code>&lt;br /&gt;</code> tags, Wordpress
will just get rid of them unless you insert additional non-breaking spaces
(<code>&amp;nbsp;</code>) so that it thinks the lines are non-empty. But! If you switch back
to the visual editor for any reason, even your <code>&amp;nbsp;&lt;br /&gt;</code> lines will be
wiped out. Even for &ldquo;average&rdquo; users I can&rsquo;t think of any situation in which
this &ldquo;feature&rdquo; would be desirable. If I put a bunch of extra newlines into
something I&rsquo;m writing, it is because <em>I want exactly that many newlines.</em> I
tend to not have much patience for software that thinks it&rsquo;s smarter than
I am; that is why I still write most of my code in <a href="http://www.vim.org/">Vim</a>
and use hand-written makefiles in an age of
<acronym title="Integrated Development Environment">IDE</acronym>s.</li>
<li>Never-ending updates. It seems like every time I log in there&rsquo;s a new update
to download. Wordpress has updates down to a one-click install process, so
this wouldn&rsquo;t be much of a problem except for the fact that
every time I have to update Wordpress warns me that I should back up my
database first. Why? Is there a significant possibility that the update might
break everything? It&rsquo;s probably just a
<acronym title="Cover Our Asses">COA</acronym>, and I back up my database
daily anyway, but this whole aspect of Wordpress makes me uneasy and I don&rsquo;t
want to have to deal with it any more. Even though I&rsquo;m covered for backups,
recovering from a botched update would undoubtedly be a nightmare.</li>
<li><a href="http://en.wikipedia.org/wiki/WordPress#Vulnerabilities">Vulnerabilities.</a> One
of the big reasons that Wordpress is updated so frequently is that it has a
long history of security vulnerabilities, and more are still being discovered
and patched. This also means that if I don&rsquo;t log in frequently enough to
download new security patches, I&rsquo;m at risk of having my site compromised,
loaded up with malware and blacklisted by Google.</li>
<li><p>It&rsquo;s written in PHP. <a href="http://me.veekun.com/blog/2012/04/09/php-a-fractal-of-bad-design/">PHP sucks.</a>
(I can&rsquo;t link to that enough.) I don&rsquo;t want to be dogmatic about technology
choices; good software is good software regardless of what language it&rsquo;s
written in, and my primary desire is always to use whatever is best for the
task at hand. But lately I&rsquo;ve been pretty vocal, both here and in person with
friends and colleagues, about how bad PHP is. Continuing to rely on it
undermines my credibility on the issue and makes me a bit of a hypocrite.</p>

<p>And while this might seem trivial or pedantic, it&rsquo;s
actually one of the root causes of almost all of the issues above; the weird
HTML handling, inappropriate entity conversion, and security issues are all
due, at least in part, to bad design patterns popularized and perpetuated by
PHP. Wordpress still uses raw non-parameterized SQL queries; blogging software
built on a modern web framework with a proper
<acronym title="Object-Relational Mapping">ORM</acronym>
would not be plagued by SQL
injection exploits as Wordpress has been historically and probably continues
to be.</p></li>
<li>Wordpress supports themes so that you can customize the apperance of your
site, but editing them kind of sucks, because they&rsquo;re all written in PHP
instead of a proper templating language. Years ago I actually wrote a lot of
PHP, but I still find Wordpress templates pretty ugly and difficult to
understand; they seem more verbose than should really be necessary for what
they accomplish, and have, on average, more <code>&lt;?php ?&gt;</code> sections than a
keyboard has keys. (That analogy sucked. Sorry, it&rsquo;s late. What I&rsquo;m trying to
say is that there are a lot of them.)</li>
</ul>


<h2>Octopress</h2>

<p>So recently I got it into my head to switch over to
<a href="http://octopress.org/">Octopress.</a> Octopress bills itself as &ldquo;a blogging
framework for hackers,&rdquo; which is an attractive description given my
<a href="http://blog.mlindgren.ca/categories/coding">predilections.</a> It uses
<a href="https://github.com/mojombo/jekyll">Jekyll</a> to generate static pages from a set
of templates and content written in
<a href="http://daringfireball.net/projects/markdown/">Markdown.</a><sup>1</sup> It is,
without a doubt, harder to use than to Wordpress, but it has the following
advantages:</p>

<ul>
<li>Rendering static pages once and serving dynamic content via AJAX is much more
efficient than rendering entire pages dynamically for each visitor. This isn&rsquo;t
really a concern for me because this is a very low-traffic site, and I have an
entire quad-core <acronym title="Virtual Private Server">VPS</acronym>
doing basically nothing besides serving this site. That said, it&rsquo;s nice to
know that when I start doing other stuff on my VPS, I won&rsquo;t be contending for
cycles with PHP and MySQL, so the site will always be very responsive. Plus,
wow does the site load fast now (once you have that huge header image cached,
anyway. I&rsquo;ll fix that soon.) Also not a huge concern for a blog, but I
didn&rsquo;t expect the difference to even be noticeable, and it definitely is.</li>
<li>Static pages significantly decrease the attack surface of the site; there is
no database, so no SQL injection to worry about, and no scripts are being
executed, so <a href="http://www.kb.cert.org/vuls/id/520827">PHP vulnerabilities</a>
aren&rsquo;t a concern.</li>
<li>Static pages means I get a nicely organized, easily navigable directory
structure instead of God-awful rewrite rules.</li>
<li>The default Octopress theme is very well designed and well-suited to
customization.  I was able to modify it to make it look almost exactly like my
old custom Wordpress theme did, while retaining the fully fluid layout of the
Octopress theme&mdash;meaning that the layout will resize to look beautiful at
any screen resolution, including on mobile devices.</li>
<li>Octopress has pretty nice built in Github and Twitter widgets.</li>
<li>Comments are handled by <a href="http://disqus.com/">Disqus</a>, which provides a nicer
comment system than Wordpress&#8217; built in comments.  I was using Disqus anyway
via a plugin, but now I don&rsquo;t have to worry about keeping the Disqus comments
synced with the Wordpress database. Incidentally, Disqus provides a very nice
system to migrate comments to new URLs by uploading a
<acronym title="Comma Separate Value">CSV</acronym> file mapping old URLs to
new URLs. They&rsquo;ve really thought of everything, so props to them for providing
a great service.</li>
<li>All of the blog content is stored on my local machine, which means I can write
posts in a disconnected environment using Vim, version control them with Git,
and then push them to my server when they&rsquo;re finished. I have a nice
deployment setup where everything is stored in a Git repository on the server
and a post-commit hook copies the updated content to the web root for the blog
subdomain. All I have to do is <code>git push</code> and the blog is instantly updated.</li>
<li>Since Wordpress uses hand-written SQL queries, it is tightly coupled with
MySQL and doesn&rsquo;t support any other database. PHP is similarly tied to Apache;
while it&rsquo;s possible to run it with other servers, it&rsquo;s not particularly easy.
By ditching Wordpress, I can also get rid of Apache, PHP and MySQL. This is
nice since I was planning to use nginx and Postgres for my
<a href="http://blog.mlindgren.ca/entry/2012/09/14/social-networks-and-content-ownership/">photo album project</a>
anyway.</li>
</ul>


<p>Those are, give or take a few minor considerations, my reasons for switching
blogging platforms. I&rsquo;d be remiss to not mention that Octopress does have some
noteworthy disadvantages even for &ldquo;power users&rdquo; to whom the above advantages
might sound attractive.
<a href="http://alblue.bandlem.com/2012/02/disadvantages-of-octopress.html" title="Disadvantages of Octopress - AlBlue's Blog">This post</a>
does a good job cataloguing a few of them. On the balance, though, I feel like
it&rsquo;s a good choice for me, and although the switch took me considerably longer
than I expected (the better part of an weekend where I&rsquo;d expected an evening or
so of work), I&rsquo;m pretty happy that I did it.</p>

<p>In an upcoming post, I&rsquo;ll discuss the actual process of reconfiguring my server
and importing all of my content (which is what I had planned to do before this
turned into a 1,600 word diatribe against Wordpress.) For now, if I&rsquo;ve inspired
you and you&rsquo;re thinking about switching your own Wordpress site to Octopress,
you can take a look at the
<a href="https://github.com/mlindgren/wp2octopress"><acronym title="Extract, Transform, Load">ETL</acronym> I wrote</a>
to ease the import process.</p>

<p><sup>1</sup> <small>Did you know that Markdown was created by John Gruber? Until very
recently, I didn&rsquo;t. And here I thought all he did was play apologist for
Apple.</small></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[strlen without conditionals]]></title>
    <link href="http://blog.mlindgren.ca/entry/2012/09/19/strlen-without-conditionals/"/>
    <updated>2012-09-19T00:21:00-07:00</updated>
    <id>http://blog.mlindgren.ca/entry/2012/09/19/strlen-without-conditionals</id>
    <content type="html"><![CDATA[<p>I&rsquo;m not usually much enamoured with interview-style programming puzzles because I find that a lot of them are actually more akin to math problems, trivial to implement once you figure out the salient mathematical property. ¬†I think I have a decent intuition for math, and I certainly took enough math courses in high school and college to give me a solid foundation in the fundamentals of algebra, geometry, statistics, calculus, etc., but I&rsquo;m not confident enough in my math skills to be entirely comfortable being judged by my ability to exercise them.<!--more--></p>

<p>There are some programming puzzles I really enjoy, though. ¬†This evening I happened across one such puzzle, via¬†<a title="@eevee on Twitter" href="https://twitter.com/eevee" target="_blank">Eevee&rsquo;s Twitter</a>:¬†&#8221;<a title="Reversing the Interview Process - Exodus Intelligence" href="http://blog.exodusintel.com/2012/09/18/reversing-the-interview-process/" target="_blank">implement a strlen() function in C that, when compiled, would not contain any conditional branches</a>.&ldquo; ¬†(The page contains solutions, so don&rsquo;t read the orange text if you want to try this yourself.) ¬†This is exactly the kind of puzzle I like; it&rsquo;s fun to think about, reasonably challenging, and requires knowledge of language features combined with creative thinking.</p>

<p>My solution is below, but I&rsquo;d recommend that you go give this a try yourself before you read on.</p>

<p>&nbsp;<br />
&nbsp;<br />
&nbsp;<br />
&nbsp;<br />
&nbsp;<br />
&nbsp;<br />
&nbsp;<br />
&nbsp;<br />
&nbsp;<br />
&nbsp;<br />
&nbsp;<br /></p>

<p>Alright, ready? Here&rsquo;s my solution:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">mystrlen</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">str</span><span class="p">,</span> <span class="kt">int</span> <span class="n">count</span><span class="p">);</span>
</span><span class='line'><span class="kt">int</span> <span class="n">mystrlenret</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">str</span><span class="p">,</span> <span class="kt">int</span> <span class="n">count</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="p">(</span><span class="o">*</span><span class="n">funcs</span><span class="p">[</span><span class="mi">2</span><span class="p">])(</span><span class="kt">char</span> <span class="o">*</span><span class="p">,</span> <span class="kt">int</span><span class="p">)</span> <span class="o">=</span> <span class="p">{</span><span class="n">mystrlen</span><span class="p">,</span> <span class="n">mystrlenret</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">mystrlen</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">str</span><span class="p">,</span> <span class="kt">int</span> <span class="n">count</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">funcs</span><span class="p">[(</span><span class="kt">int</span><span class="p">)(</span><span class="o">!*</span><span class="n">str</span><span class="p">)](</span><span class="o">++</span><span class="n">str</span><span class="p">,</span> <span class="o">++</span><span class="n">count</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">mystrlenret</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">str</span><span class="p">,</span> <span class="kt">int</span> <span class="n">count</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">count</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%i</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">mystrlen</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="n">argc</span> <span class="o">-</span> <span class="mi">1</span><span class="p">],</span> <span class="mi">0</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see, the solution is actually very simple, but there are a couple of tricks necessary to make it work.  First of all, you obviously can&rsquo;t use a loop to count the characters because a loop requires a conditional jump to either terminate or continue.  You could still use a loop-like construct such as <code>goto</code>, but that only reframes the problem; you still need to make a decision about when to jump out.</p>

<p>So, the problem can basically be reduced to this: how can you make a decision without using a conditional?  Well, you can index into an array of possibilities using some property that you can derive from your input.  In this case, the most important property is that the characters can be grouped into two sets: terminating characters (i.e. <code>&lsquo;\0&rsquo;</code>) and non-terminating characters (all others).  On that basis, our array of possibilites can consist of two function pointers, one which continues recursively and the other which terminates.</p>

<p>The only problem remaining is how to group the characters, again without using conditionals.  My first thought here was actually to divide the character by itself, in which case all non-terminating characters would be 1, and the null terminator would be&hellip; oh, a divide-by-zero error. I quickly dismissed that thought and realized that binary not is a simpler way to map the characters.  However, Eevee came up with what I think is <a href="https://gist.github.com/3746130" title="Eevee's solution on Github" target="_blank">a very clever and quite unorthodox solution</a> involving division by handling the <code>SIGFPE</code> generated by the division by zero and using the handler to change an unconditional jump address.</p>

<p>I&rsquo;d recommend also checking out the solutions provided in the <a title="Reversing the Interview Process - Exodus Intelligence" href="http://blog.exodusintel.com/2012/09/18/reversing-the-interview-process/" target="_blank">original post</a>; all three of them are a bit more elegant than mine, if perhaps a bit more difficult to understand.  (In particular, the count parameter that I use is superfluous, although I don&rsquo;t consider the difference particularly important since it can easily be hidden in my solution using a macro or helper function.)</p>

<p>Since my solution isn&rsquo;t significantly different from those presented in the original post, I wanted to go a bit further and take a look at the performance implications of not using conditionals.  Yeah, yeah, premature optimization is the root of all evil and all that&mdash;I&rsquo;m just doing this out of curiosity; regardless of the results, I would never go this far out of my way to avoid a conditional jump in a real program, nor would I recommend doing so to anyone else.    I decided to compare my solution above against a na√Øve implementation with a while loop; comparing it against <code>strlen()</code> from <code>string.h</code> would be pretty meaningless because it would be linked against a precompiled library which, for all I know, could be hand-optimized.  So here&rsquo;s the code I&rsquo;m using instead:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">int</span> <span class="nf">mystrlen</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">c</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">len</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="k">while</span><span class="p">(</span><span class="o">*</span><span class="n">c</span><span class="o">++</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="n">len</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>And here&rsquo;s how I&rsquo;m timing the functions&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">struct</span> <span class="n">timeval</span> <span class="n">start</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">timeval</span> <span class="n">end</span><span class="p">;</span>
</span><span class='line'><span class="k">volatile</span> <span class="kt">int</span> <span class="n">n</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gettimeofday</span><span class="p">(</span><span class="o">&amp;</span><span class="n">start</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'><span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100000</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'>  <span class="n">n</span> <span class="o">=</span> <span class="n">mystrlen</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="n">argc</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]);</span>
</span><span class='line'><span class="n">gettimeofday</span><span class="p">(</span><span class="o">&amp;</span><span class="n">end</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">printf</span><span class="p">(</span><span class="s">&quot;Elapsed: %ld sec %ld usec</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span>
</span><span class='line'>       <span class="p">(</span><span class="kt">long</span><span class="p">)</span> <span class="n">end</span><span class="p">.</span><span class="n">tv_sec</span> <span class="o">-</span> <span class="n">start</span><span class="p">.</span><span class="n">tv_sec</span><span class="p">,</span>
</span><span class='line'>       <span class="p">(</span><span class="kt">long</span><span class="p">)</span> <span class="n">end</span><span class="p">.</span><span class="n">tv_usec</span> <span class="o">-</span> <span class="n">start</span><span class="p">.</span><span class="n">tv_usec</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>I&rsquo;m assigning the result to a volatile int to ensure that even when the code is optimized, the compiler won&rsquo;t completely optimize out the function call.  So, first, predictions: anyone who has taken a computer architecture course will tell you that conditional jumps can be very expensive because of the recovery the CPU has to do if the branch is mispredicted.  However, branch predictors typically have very high accuracy, and there&rsquo;s also a significant overhead involved in putting the parameters and return address on the stack when a function is called.  Therefore, I predict that in that with no compiler optimization, the while loop will be faster.</p>

<p>&hellip;And, it is.  Running each function in a loop 100,000 times on a 23-character string, the average over five trials was 28,699 ¬µsec for the non-conditional version and 9,012 ¬µsec for the while loop.  Using a fixed string will cause the branch predictor to have near-perfect accuracy in the while loop version, so there might be a slight difference if I used a large array of strings of randomized lengths, but I doubt it would be significant.</p>

<p>But what if we let the compiler (llvm-gcc in this case) optimize it?  I don&rsquo;t know enough about compiler optimization in general or llvm-gcc in particular to predict what will happen here.  The non-conditional <code>strlen()</code> is tail recursive so the compiler will optimize out the extra function calls at <code>-O2</code> and above, but what will be optimized beyond that I really don&rsquo;t know.</p>

<p>As it turns out, compiling at <code>-O3</code> and running 100,000 times on the same 23-character string, the non-conditional function took an average of 11,182 ¬µsec over five trials.  That&rsquo;s a significant improvement, but it&rsquo;s still slower than the unoptimized while loop, so it obviously won&rsquo;t beat that.  And indeed, the optimized while loop takes only 3,072 ¬µsec.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The state of Python imaging]]></title>
    <link href="http://blog.mlindgren.ca/entry/2012/09/14/the-state-of-python-imaging/"/>
    <updated>2012-09-14T03:36:00-07:00</updated>
    <id>http://blog.mlindgren.ca/entry/2012/09/14/the-state-of-python-imaging</id>
    <content type="html"><![CDATA[<p>(<a title="The state of Python imaging - Eevee's Livejournal" href="http://eevee.livejournal.com/307299.html" target="_blank">With apologies to Eevee</a>, of whom I am a great fan.)</p>

<p>So, I&rsquo;m <a title="Social networks and content ownership - mlindgren.ca" href="http://mlindgren.ca/blog/archives/597" target="_blank">working on a photo album app written in Python.</a>¬† I&rsquo;m using Python because, well, I love it. ¬†I think it&rsquo;s the perfect language for web development; it&rsquo;s simple and very readable, and ample syntactic sugar and just the right mix of procedural and functional features almost completely eliminate tedious boilerplate. ¬†As a trivial example for those who have never used Python, consider:<!--more--></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">db_tags</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">([(</span><span class="n">tag</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="n">tag</span><span class="p">)</span> <span class="k">for</span> <span class="n">tag</span> <span class="ow">in</span>
</span><span class='line'>                <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">query</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">MetadataTag</span><span class="p">)</span><span class="o">.</span><span class="n">filter_by</span><span class="p">(</span><span class="n">source</span> <span class="o">=</span> <span class="s">&#39;exif&#39;</span><span class="p">)])</span>
</span></code></pre></td></tr></table></div></figure>


<p>What I&rsquo;m doing here is grabbing all of the EXIF tags I know about out of my database with <a title="SQLAlchemy" href="http://www.sqlalchemy.org/" target="_blank">SQLAlchemy</a>¬†(also awesome, by the way), and creating a dictionary which maps each tag&rsquo;s name to the corresponding <acronym title="Object-Relational Mapper">ORM</acronym> object; I can find the ORM object simply with <code>db_tags[tag_name]</code>, which lets me easily and efficiently insert new tag values as I read <acronym title="Exchangeable Image File Format">EXIF</acronym> data from a photo. ¬†This isn&rsquo;t particularly¬†<em>difficult</em> to do in any other language; as I said, it&rsquo;s a trivial example. ¬†But consider how much more verbose the code would be: PHP, which is still the most popular language for web applications despite being an <a title="PHP: A Fractal of Bad Design - Fuzzy Notepad" href="http://me.veekun.com/blog/2012/04/09/php-a-fractal-of-bad-design/" target="_blank">incorrigible pile of garbage</a>, doesn&rsquo;t have list comprehensions. ¬†I don&rsquo;t even want to think about how many lines of code this would take in Java; additionally, while I&rsquo;m unfamiliar with them in general, I suspect Java ORMs require the use of generics to a painful extent (i.e. more than not at all). ¬†In Python it only takes one <acronym title="Source Line Of Code">SLOC</acronym>, without sacrificing any readability.<sup>1, 2</sup></p>

<p>So, Python&rsquo;s pretty great. But like all languages, it does have a few problems. The one I have had the most difficulty with in my current project is that third party library support is somewhat lacking in some important areas; specifically, there aren&rsquo;t many good options for reading and manipulating images. The most popular library seems to be the <a href="http://www.pythonware.com/products/pil/">Python Imaging Library</a>, PIL. It&rsquo;s easy enough to install and provides a¬†<em>passable</em> set of core features, but doesn&rsquo;t go much beyond that. ¬†For instance, none of the various camera raw formats seem to be supported, which I consider a fairly important feature for my photo album; I&rsquo;d very much like be able to upload original raws and have the application automatically convert them to JPEGs for me. ¬†Additionally, it doesn&rsquo;t provide much in the way of convenience methods for cropping and resizing images. ¬†<a title="ImageMagick" href="http://www.imagemagick.org/" target="_blank">ImageMagick</a> has <a title="ImageMagick geometry" href="http://www.imagemagick.org/script/command-line-processing.php#geometry" target="_blank">a very nice means of specifying cropping and resizing geometry</a> with various aspect ratio-preserving (or not) behaviour, and I wanted to be able to leverage something similar for my app so that I could quickly prototype with various size options.</p>

<p>Given that ImageMagick provides most of the functionality I want that PIL lacks, it seemed like a good option, but it&rsquo;s a C library and Python doesn&rsquo;t yet have mature bindings for it. ¬†It&rsquo;s getting there, though! ¬†I decided to go with <a title="Python Wand library" href="http://dahlia.kr/wand/index.html" target="_blank">Wand</a>, which is a fork of python-magickwand. ¬†It has a nice high-level API, but also provides direct access to most of the low-level MagickWand APIs, making it fairly flexible. ¬†When I first found it, it did not have support for the nice geometry specifications I wanted to use, but being an open source project I was able to patch that in. ¬†<a title="Wand version 0.2.2" href="http://dahlia.kr/wand/changes.html#version-0-2-2" target="_blank">Version 0.2.2</a> will include my patch, which provides the <code>Image.transform</code> method for easy cropping and resizing. ¬†Eevee is also <a title="Sanpera - Eevee's Github" href="https://github.com/eevee/sanpera" target="_blank">working on a Python imaging library</a>, which is promising, but it&rsquo;s still a work in progress.</p>

<p>Unfortunately Wand doesn&rsquo;t yet support retrieving EXIF, <acronym title="International Press Telecommunications Council">IPTC</acronym> or <acronym title="Extensible Metadata Platform">XMP</acronym> metadata from images, which is another requirement for me. ¬†ImageMagick does support EXIF at least, and that&rsquo;s on the roadmap for Wand, but implementing a high-level interface for EXIF tags is a bigger task than I have time for at the moment. ¬†That meant that I had to turn to another library to retrieve metadata. ¬†<a title="pyexiv2 library" href="http://tilloy.net/dev/pyexiv2/" target="_blank">pyexiv2</a>, a Python binding for the exiv2 C++ library, initially looked promising. ¬†Unfortunately I discovered that it&rsquo;s not installable via any Python package manager; it must be built from source (via a build system I&rsquo;ve never even heard of, and I&rsquo;m familiar with more than a few build systems), unless a binary is provided for your platform by the project maintainers (i.e. you are on Debian, Ubuntu, Fedora or Windows).</p>

<p>My project already has more dependencies than I&rsquo;m entirely comfortable with; one of the reasons that Python only has modest adoption as a web application platform despite being a great language for the task is that it doesn&rsquo;t have a kitchen sink-style standard library, and third-party libraries require separate installation. ¬†In general I consider that a good thing; I&rsquo;d rather have a well-designed standard library than a <a title="PHP: A Fractal of Bad Design - Fuzzy Notepad" href="http://me.veekun.com/blog/2012/04/09/php-a-fractal-of-bad-design/#general" target="_blank">gigantic mishmash of inconsistently named global functions.</a>¬† However, it does make deployment a little more complex. ¬†So far I&rsquo;ve managed to stick to libraries which can be installed in one step using well-known package managers, so the setup procedure for my app should not be too arduous. ¬†Adding pyexiv2 as a dependency and thereby including an entirely different build system in the process would likely have complicated the installation procedure to the point that no actual ordinary humans would ever use my application. ¬†That&rsquo;s something I want to avoid, if possible.</p>

<p><del>For now I have settled for exif-py.</del>¬† It only handles EXIF tags, not IPTC or XMP, which is disappointing because I really wanted to support multiple metadata formats. ¬†It&rsquo;s a pure Python library in a single file, though, so I can just include with my distribution. ¬†It&rsquo;s easy to use and gets the job done, so it will have to do for now. ¬†I&rsquo;m hoping that pyexiv2 will show up in pip (a Python package manager) at some point, though. ¬†[<strong>Updated September 16, 2012:¬†</strong>I&rsquo;ve discovered that exif-py is broken in at least a couple significant ways, so I&rsquo;m kind of back at square one for handling metadata. ¬†exif-py seems to be unable to detect EXIF data in some files that have it. ¬†Additionally, the strings that it translates orientation codes to are not consistent with each other, so they&rsquo;re basically wrong. ¬†I&rsquo;ve informed the maintainers of these issues, but I don&rsquo;t have time to fix them myself.]</p>

<p>The process of trying to find a good imaging package for Python and ultimately settling for two separate libraries which still don&rsquo;t quite do everything I want has made it clear to me that third party library support for Python still has a way to go. ¬†Hopefully the situation will improve as adoption of the language increases. ¬†I&rsquo;m happy to do my part, both through contributions to open source libraries such as Wand, and by building apps using Python to bolster the ecosystem. ¬†I hope that by demonstrating what&rsquo;s possible with Python as a web application platform, I can help convince new web developers to build their applications using Python as well&hellip; which provides yet more reason for me to be diligent about finishing my photo album app!</p>

<p><sup>1</sup> <small>Okay, the <code>dict</code> function is perhaps not the most explicit. Check the docs once, though, and it&rsquo;s very easy to understand.</small><br/>
<sup>2</sup> <small>Ruby would doubtless be similarly concise, and it seems like a nice language in my limited experience, but I find its syntax and distinction between &ldquo;symbols&rdquo; and strings to not be to my taste.</small></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Social networks and content ownership]]></title>
    <link href="http://blog.mlindgren.ca/entry/2012/09/14/social-networks-and-content-ownership/"/>
    <updated>2012-09-14T00:45:00-07:00</updated>
    <id>http://blog.mlindgren.ca/entry/2012/09/14/social-networks-and-content-ownership</id>
    <content type="html"><![CDATA[<p>I&rsquo;m always wary about pre-announcing things I&rsquo;m working on; I have more ambition than spare time, which leads to a tendency to start projects and not finish them. ¬†But if there&rsquo;s to be a point in maintaining this website, I need to actually¬†<em>write things</em> once in a while, so I may as well write about what I&rsquo;ve been hacking on lately. ¬†At the moment, I&rsquo;m building a web-based photo album in Python. ¬†My primary reason for doing this is that I&rsquo;d like to own more of my information. ¬†Apps and social networks have some significant advantages, particularly for the less technologically inclined, but I&rsquo;m ambivalent about the trend away from an open Internet and towards a set of non-interoperable, monolithic walled-garden services.<!--more--></p>

<p>When Google+ debuted, my enthusiasm for the service followed a sort of bell curve. ¬†I was already using Twitter and Facebook, and I didn&rsquo;t want to have to post everything to yet another service. ¬†At the urging of friends, I joined anyway, and warmed to it considerably. ¬†It was simply better software than Facebook; the interface was cleaner, the privacy controls more usable, the communication options more diverse, the means of sharing and interacting with media more engaging and deeply integrated. ¬†Best of all, there wasn&rsquo;t nearly as much app spam. ¬†Much of this is probably still true, although the impression I get from Google+ pages I&rsquo;ve stumbled across recently is that they&rsquo;ve been trying to make it look more like Facebook, to its detriment.</p>

<p>Realizing that it was a better product in almost every regard, I started using Google+ almost exclusively and tried to recruit additional friends away from Facebook. ¬†I stopped uploading new photos to Facebook and even purchased additional storage capacity on Google+ so I could upload all of my photos there at the original quality. ¬†Problems quickly became apparent, though. ¬†Despite my best efforts, nobody was using the service; even among those of my friends who were enthusiastic early adopters, actual¬†<em>social</em> activity among my circles dropped off quickly, and I soon found myself wondering why I even bothered to check for updates. ¬†I finally deleted my account when I logged in one day and realized that the newest post in my news feed was from several months prior.</p>

<p>And with my Google+ account, there went all of the photos and other content I had uploaded. ¬†I still have the files, of course, but the effort I expended in selecting a handful of good photos to upload to each gallery from the hundreds of shots I take on most outings, not to mention the comments, captions, and other metadata I had curated, vanished into the ether with not a trace left behind. ¬†The moral of the story is that private social networks are impermanent, and thus anything uploaded to them necessarily has an unknown but very much finite period of accessibility and relevance. ¬†Whether or not Google ever admits it, Google+ never quite took off, but it could have supplanted Facebook just as Facebook did MySpace. ¬†If and when some other service comes along and succeeds where Google+ failed, every user on Facebook will be forced to start over from scratch on whatever&rsquo;s in vogue next.</p>

<p>I&rsquo;m tired of playing that game. I want to keep control over the content I create so that I can truly decide how it&rsquo;s shared and with whom, and so that if I need to migrate my data to a new system, I have the means to do so.<sup>1</sup> The ultimate realization of this ideal is in decentralized services based on open protocols, such as <a title="Tent" href="http://tent.io/">Tent</a>. I&rsquo;m very enthusiastic about such attempts, but realistically, I&rsquo;m skeptical that any of them will ever gain the necessary traction to make a real difference. Even if Tent or some analogue gains millions of users, it will be a drop in the bucket compared to Facebook, and entrenched players such as Facebook will have no incentive to interoperate because decentralized services do nothing but threaten their business model.</p>

<p>I will do as much as is in my power to help services like Tent succeed, but for the time being, that is not much. ¬†That kind of leaves me without a good means of pushing my content to the people who care about it. ¬†Nevertheless, I can still take ownership of it by hosting it on my own server using my own tools. ¬†That is the purpose of developing my own photo album software. ¬†I&rsquo;m making good progress so far, and hopefully soon I&rsquo;ll have more to share; once the code is in a reasonably complete state with most of the major features I want for my own purposes, I intend to make the app open source and share the code on my <a title="mlindgren on Github" href="https://github.com/mlindgren" target="_blank">Github account.</a>¬† And now that I&rsquo;ve announced my intent publicly, I expect anyone who reads this to hold me to my plan to ensure that I get it finished!</p>

<p><sup>1</sup> <small>Both Facebook and Google+ provide a means of exporting the data you&rsquo;ve shared. I believe both will export everything belonging to you personally, but I don&rsquo;t think you necessarily get to keep all of the social data associated with your content, e.g. comments, nor the relationships between different pieces of content. Last I checked, the data was merely dumped into a bunch of flat files; nothing is kept in a structured format that makes it easy to work with, and even if it were, other privates services don&rsquo;t usually offer the option to import your data. While it may still not be easy, if you own your own data and manage it using open source tools, it&rsquo;s at least <em>possible</em> to migrate everything to another system with the greatest fidelity supported by that system.</small></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mlindgren.ca: now on an all-new server!]]></title>
    <link href="http://blog.mlindgren.ca/entry/2012/08/08/mlindgren-ca-now-on-an-all-new-server/"/>
    <updated>2012-08-08T00:40:00-07:00</updated>
    <id>http://blog.mlindgren.ca/entry/2012/08/08/mlindgren-ca-now-on-an-all-new-server</id>
    <content type="html"><![CDATA[<p>It feels like a bit of a cop out to post this after having not written anything
for five months, but I&rsquo;ve decided to switch from shared hosting to a <acronym
title="Virtual Private Server">VPS</acronym>.  I&rsquo;ve also moved WordPress out of the www root directory.  The transition was surprisingly easy, but it&rsquo;s possible that some pages may contain dead links or missing images.  If you see any, please leave a comment and let me know!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some thoughts on used games and online passes]]></title>
    <link href="http://blog.mlindgren.ca/entry/2012/02/03/some-thoughts-on-used-games-and-online-passes/"/>
    <updated>2012-02-03T23:37:00-08:00</updated>
    <id>http://blog.mlindgren.ca/entry/2012/02/03/some-thoughts-on-used-games-and-online-passes</id>
    <content type="html"><![CDATA[<p>Online passes are becoming more and more ubiquitous in the games industry.  For those who aren&rsquo;t familiar with the terminology, an online pass is essentially a form of digital rights management designed to discourage and devalue used game sales by tying some game content to unique, one-use codes packaged with new copies of games.  Online passes are a contentious issue.  Some feel that they&rsquo;re a perfectly legitimate way for developers and publishers to ensure that they get their cut of each sale, and to reward those who purchase games new.  Others see them as a violation of consumer rights or contend that they inconvenience customers who <em>do</em> buy new (by requiring them to type in long access codes on game controllers) while being of only dubious value to publishers and developers.</p>

<p>Most recently, there&rsquo;s been a bit of an uproar over the inclusion of an online pass in <em><a href="http://en.wikipedia.org/wiki/Kingdoms_of_Amalur:_Reckoning">Kingdoms of Amalur: Reckoning</a></em>, a single-player RPG with no online component.  The pass confers seven extra quests on those who purchase the game new, or deprives those who purchased used of them, depending on your perspective.<!--more-->  Before I lay my cards on the table, I&rsquo;ll let Curt Schilling, the founder of the studio behind the game, explain what he sees the purpose of the online pass as:</p>

<blockquote>That being said, this next part is likely to piss people off, but it&#8217;s a truth and it&#8217;s how I feel. You can argue the merits and effectiveness of it, but right now it&#8217;s how it&#8217;s done and as someone that&#8217;s as invested as I am in this company, I stand by what has happened.

DAY 1 DLC, to be extremely and VIVIDLY clear, is FREE, 100% totally FREE, to anyone that buys a new copy of Reckoning, ANYONE. 

If you don&#8217;t buy new games you buy them used, and in that case you will have to pay for the Day 1 free DLC content the new copy buyers got for free.

It&#8217;s clear the intent right? To promote early adopters and MUCH MORE IMPORTANT TO ME, REWARD fans and gamers who commit to us with their time and money when it benefits the company.</blockquote>


<p>You can read the rest of his post <a href="http://forums.reckoning.amalur.com/showthread.php?3063-Did-you-push-back-at-EA-at-all-over-this-Quest-content-gated-by-online-pass.&s=2ba8c3194088140ce6161b0c374691f5&p=52812&viewfull=1#post52812" title="Curt Schilling's post on the Kingdoms of Amalur online pass.">on the Kingdoms of Amalur forum.</a>  I think Curt&rsquo;s position is reasonable and I am sympathetic to the frustration he&rsquo;s clearly feeling; he believes that he&rsquo;s trying to protect his business interests and in the process rewarding loyal fans with free bonus content, and receiving nothing but scorn in return.</p>

<p>I don&rsquo;t think <em>Kingdoms of Amalur</em>&rsquo;s online pass is an egregious abuse by any means, but in general,  I do count myself among those who see online passes as an unsettling trend.  I think consumers have good reason to be suspicious of companies that choose to use online passes.  There are good arguments for and against online passes, but the most popular arguments in favor of online passes often seem to rely on strawmen and dubious assumptions with no supporting data.  Jerry Holkins (Tycho) of Penny Arcade <a href="http://penny-arcade.com/2012/01/30/plurality" title="Plurality - Penny Arcade">writes:</a></p>

<blockquote>I&#8217;ve been reading a lot his weekend about Fat Cats and how fat they are and how they want your money, but the only choice you get in this matter (aside from the wholly valid &#8220;not buying it&#8221; choice, of course) is which supposed Fat Cat to enrich.  You can enrich the people who made the game you are enjoying, or you can enrich people who had nothing to do with the game.  Policies like this are designed to incentivize new purchases: that is to say, sales.  We call those sales.</blockquote>


<p>In other words, you&rsquo;re either supporting the developers who produce the games you love, or you&rsquo;re supporting retailers like Gamestop.  Naturally most consumers would prefer the former, all else being equal; developers are creative entities, focused&mdash;or so we can hope&mdash;on artistic expression before profit.  Retailers, by contrast, are often viewed as greedy and incidental vestiges of the rapidly dying era of physical media.  Their services are at best unnecessary, and at worst <a href="http://www.joystiq.com/2011/08/24/gamestop-intentionally-removing-deus-ex-onlive-coupons-from-reta/" title="Gamestop intentionally removing Deus Ex OnLive coupons from retail PC copies - Joystiq">abusive of their customers to an extent that would make an ardent objectivist blush.</a></p>

<p>This is a false dichotomy for two reasons.  First, traditional retailers are not the only avenues for the trading and selling of used games.  One could trade games directly with friends or colleagues, or buy and sell them at garage sales and flea markets.  There are even a number of online services that have been created for the explicit purpose of allowing consumers to trade and sell used games at reasonable prices.  (Of course, those services take a cut too, but I think it&rsquo;s safe to assume that their margins are nothing like Gamestop&rsquo;s, and they are much more consumer-centric in general.)</p>

<p>More importantly, there is an implicit assumption in Holkins&#8217; argument that each used sale deprives the publisher of a new sale.  This is the same false equivalency that the <acronym title="Motion Picture Association of America">MPAA</acronym> and <acronym title="Recording Industry Association of America">RIAA</acronym> have been using for years to <a href="http://www.pcworld.com/article/223431/riaa_thinks_limewire_owes_75_trillion_in_damages.html" title="RIAA thinks Limewire owes $75 trillion in damages" target="_blank">overstate the negative effects of piracy</a>, and it is no less pernicious when applied to secondhand markets.  To the best of my knowledge there is absolutely no data to support this assertion, and it doesn&rsquo;t really hold up to logical scrutiny.  Sure, a sale of a used game does not directly support the game&rsquo;s publisher and developer, but there&rsquo;s no guarantee that the buyer would otherwise have bought the game new.  More importantly, the person who traded in that game for store credit is likely to use that credit toward the purchase of a new game.</p>

<p>&ldquo;Triple-A&rdquo; retail games cost $60 in the US and Canada these days, and in countries like Australia prices can reach AUS $100 and above.  That is, frankly, an absurd amount of money and out of the reach of a great many people.  Without a healthy used market to mitigate these prices, many consumers would simply be forced to purchase fewer games.  Others would likely turn to piracy.  Nobody wins in that scenario; not developers, not publishers, and certainly not gamers.</p>

<p>My arguments thus far have been based on assumptions and logic rather than empirical data, just as the arguments I am attacking are.  What I am postulating is that my analysis is at least as plausible as the alternative (in my opinion, moreso), and that in the absence of actual scientific data the sane solution for publishers is to try to compete with used sales by offering better service and pricing incentives rather than trying to find technological solutions which, even when well-meaning, embitter those who can&rsquo;t afford to buy every game they are interested in at $60 a pop.</p>

<p>Now, you might be thinking that because I&rsquo;m not in the industry, my perspective is limited.  Maybe publishers <em>do</em> have data which support the conclusion that used game sales are a net loss.  It&rsquo;s possible; it certainly makes sense that entities which exist solely to maximize game sales would want to have that data.  That said, given the ineptitude displayed by media giants in fighting piracy, I am not convinced that it should be taken for granted that they take a scientific approach to <em>anything</em>.  Take this exchange between <a href="https://twitter.com/#!/kristen_">Kristen Bornemann</a> and I on Twitter:</p>

<blockquote>
<a href="https://twitter.com/#!/kristen_"><strong>@kristen_</strong></a>: <a
href="https://twitter.com/#!/cwgabriel">@cwgabriel</a> When people pick up used
games it reduces the chance of publishers investing more money into the game
(sequel, etc).<br />
<a href="https://twitter.com/#!/kristen_"><strong>@kristen_</strong></a>: <a
href="https://twitter.com/#!/cwgabriel">@cwgabriel</a> Therefore it directly
hurts us as devs‚Ä¶ especially 3rd party devs.<br />
<a href="https://twitter.com/#!/lindgrenM"><strong>@lindgrenM</strong></a>: <a
href="https://twitter.com/#!/kristen_">@kristen_</a> Do you have statistics that
demonstrate that, or are you just assuming so by the false equivalency of 1 used
sale = 1 lost sale?<br />
<a href="https://twitter.com/#!/kristen_"><strong>@kristen_</strong></a>: <a
href="https://twitter.com/#!/lindgrenM">@lindgrenM</a> I worked in publishing.
The fact is if a publisher hears that used sales are high = death for game. They
don&#8217;t care about stats.<br />
<a href="https://twitter.com/#!/lindgrenM"><strong>@lindgrenM</strong></a>: <a
href="https://twitter.com/#!/kristen_">@kristen_</a> Then perhaps the community
should focus on fixing that, rather than limiting consumer choice? <br />
<a href="https://twitter.com/#!/lindgrenM"><strong>@lindgrenM</strong></a>: <a
href="https://twitter.com/#!/kristen_">@kristen_</a> Because if the publishers
&#8220;don&#8217;t care about stats,&#8221; what are their business decisions based on?
Vindictiveness? <br />
<a href="https://twitter.com/#!/kristen_"><strong>@kristen_</strong></a>: <a href="https://twitter.com/#!/lindgrenM">@lindgrenM</a> hearsay and gut/instinct‚Ä¶ why do you think I left? ;)
</blockquote>


<p>I&rsquo;m aware that this short Twitter exchange is by no means a definitive example of how every publisher everywhere conducts business.  Again, I&rsquo;m simply saying that until I see data which actually show a net loss for publishers and developers from used sales, I see no reason to take as gospel the assertion that they <em>are</em> a net loss.  That said, even if conclusive data were available, I still don&rsquo;t think I could support online passes at the conceptual level.  <em>Amalur</em> is innocuous, but it&rsquo;s the exception rather than the rule; most online passes lock used buyers out of multiplayer until they&rsquo;ve shelled out another ten to fifteen dollars.  That is blatantly vindictive anti-consumer behaviour on the part of publishers, and it epitomizes the troubling trend of media companies punishing legitimate consumers in a misguided attempt to artificially control the marketplace and perpetuate outdated business models.  For an example of exactly how far this thinking goes, consider <a href="http://altdevblogaday.com/2012/02/02/i-feel-used/" title="I Feel Used">this post</a> by Jameson Durall of Volition:</p>

<blockquote>There‚Äôs another big rumor about the next Xbox console that could really start to shake things up‚Ä¶it won‚Äôt play used games at all!  Personally I think this would be a fantastic change for our business and even though the consumers would be up in arms about it at first‚Ä¶they will grow to understand why and that it won‚Äôt kill them.</blockquote>


<p>To say that entirely removing the used market &ldquo;won&rsquo;t kill&rdquo; consumers strikes me as extremely ironic.  Used games have existed for as long as games have existed, and have evidently not killed the industry, and yet that is exactly what developers and publishers are complaining will happen if we continue with the status quo.  Durall himself says that used game sales are &ldquo;making it more and more difficult for us to continue making higher quality products.&rdquo;  My feeling is that the rhetoric is a lot more emotionally charged on the part of online pass supporters; there is a strong insinuation that used buyers are costing people their jobs and are in some sense morally inferior to those who have the luxury of being able to buy only new games.</p>

<p>But I digress.  I don&rsquo;t give too much credence to the rumor Durall refers to, but the idea that anyone would consider it a good course of action is mind boggling to me.  It&rsquo;s another step in the march towards the complete erosion of consumer rights, and along the way the products we purchase are further crippled and devalued.  It hurts consumers and it hurts content producers because <em>this devaluation of legitimate products is what drives growth in piracy.</em></p>

<p>I must clarify exactly what I mean when I say that product devaluation drives growth in piracy.  It is a popular belief among technology writers on the Internet that services which compete on convenience, such as iTunes and Steam, can actually reduce piracy.  The data that I have seen do not support that conclusion.  However, history has demonstrated that a legislative or technical solution is likely impossible because pirates will always find ways to break digital locks and make enforcement of anti-piracy legislation effectively impossible.  Any legislative solution broad enough to admit the possibility of significantly decreasing piracy by inconveniencing would-be pirates <a href="http://en.wikipedia.org/wiki/Stop_Online_Piracy_Act" title="Wikipedia: Stop Online Piracy Act">would likely have negative repercussions outweighing the benefits</a>, and the assumption that a nuking-the-anthill style solution &agrave; la <acronym title="Stop Online Piracy Act">SOPA</acronym> would be effective for more than a few weeks is <a href="https://chrome.google.com/webstore/detail/hnifiobpjihmmjgiokkaalgomddebhng/details">extremely dubious anyway.</a></p>

<p>So what are content producers to do?  Pandora&rsquo;s Box has been opened and the clock cannot be turned back.  There will always be people with no compunction about downloading works without even attempting to compensate the artist, and dishearteningly, the research I have read indicates that once someone is turned on to piracy he is unlikely to stop&mdash;even if content producers then offer better incentives to compete with pirates.  It <a href="http://repository.cmu.edu/cgi/viewcontent.cgi?article=1056&context=heinzworks" title="Converting Pirates without Cannibalizing Purchasers:  The Impact of Digital Distribution on Physical Sales and Internet Piracy">has been demonstrated</a>, however, that removing options increases piracy.  Devaluing products and services with arbitrary restrictions and inconveniencing legitimate consumers will have the same effect.  <em>Copying is the fundamental operation on which the principle of computing is built.  It cannot be stopped.  The only thing content producers can do is to prevent people from turning to piracy in the first place by offering the best service possible.</em></p>

<p>Returning to the topic at hand, online passes go hand in hand with the consumer-as-enemy mindset that plagues media giants.  They arise from the same attitude that justifies $30 BluRay movies with minutes and minutes of unskippable commercials, and <a href="http://www.destructoid.com/drm-fun-several-legit-ubisoft-games-will-break-next-week-220948.phtml" title="DRM Fun: Several legit Ubisoft games will break next week - Destructoid">always-on DRM which prevents legitimate purchasers from playing single-player games</a> when the publisher&rsquo;s servers are down.  Through legislation and technology, these companies are trying to make ownership rights exclusive to corporations and prevent consumers from interacting with the media they purchase in any manner that is not explicitly pre-approved.  They are declaring a war on their customers, and it is a war they cannot win.  Make no mistake, though: as these behemoths run themselves into the ground because they are incapable of adapting, there will be casualties among the artists, musicians and developers who create the works of culture we love.</p>

<p>That is why I cannot support online passes.  I truly believe that in the long run they are detrimental to all involved.  I truly believe that the best way for a company to protect its interests is to do its utmost to reward its fans and give them the best experience possible&mdash;all of them, even those who do not <em>directly</em> contribute to the bottom line.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2010 and 2011 in Review]]></title>
    <link href="http://blog.mlindgren.ca/entry/2011/12/31/2010-and-2011-in-review/"/>
    <updated>2011-12-31T15:59:00-08:00</updated>
    <id>http://blog.mlindgren.ca/entry/2011/12/31/2010-and-2011-in-review</id>
    <content type="html"><![CDATA[<p>If you&rsquo;ll forgive me for &ldquo;metablogging,&rdquo; I&rsquo;ve been ruminating lately on the purpose of this website. ¬†Up until now, I&rsquo;ve been trying to focus exclusively on technology, programming and game design, and to minimize the subjective aspects of my connection to those fields. ¬†Put more simply, I&rsquo;ve been avoiding writing about who I am and what I do in favour of producing a series of mostly impersonal tutorials and critiques of technology. ¬†There are a number of reasons for this‚Äîthe word &ldquo;professionalism&rdquo; comes to mind as chief among them. ¬†I&rsquo;d like this website to be my public face on the Internet, and as every saavy Internet denizen should know by now, there are certain risks associated with maintaining a public persona. ¬†I greatly admire <a href="http://zedshaw.com/">Zed Shaw</a>, for his personality as well as his technical accomplishments, but I have no desire to make myself unemployable as he claims to have done (albeit temporarily).</p>

<p>That said, trying to take a dry, detached and objective approach to creating a personal website presents a number of problems itself. ¬†First and foremost, it&rsquo;s an inherent contradiction; if I don&rsquo;t write about myself in any meaningful capacity, then there is nothing aside from the superficial about this website which makes it mine. ¬†I can&rsquo;t imagine it makes for a very interesting read, either. ¬†Realistically, how many people will come here looking for <a title="How to link GLUT in Qt Creator on OS X" href="http://www.mlindgren.ca/archives/453">advice on how to link GLUT?</a>¬† Readership numbers are of little to no concern to me, mind you, but I can at least endeavour to give this website a purposeful existence. ¬†To that end, I want to start writing more about personal topics, although for the sake of cohesiveness I&rsquo;m going to continue to focus primarily on those aspects of my life that will be of interest to a technically-minded audience.<!--more--></p>

<p>As a start, I think that this is a good time to reflect on what I&rsquo;ve done since I started this blog in May of 2010. ¬†Early in May, I moved to Calgary, Alberta, to start a sixteen-month internship with <a href="http://pason.com/">Pason Systems Corporation.</a>¬† Pason is the market-leading provider of oil rig instrumentation and service, with a wide variety of tools and technology available to facilitate safety and improve efficiency on oil rigs. ¬†All of Pason&rsquo;s rig-site hardware and software is designed in house, but my work was on an internal web application designed to support Pason&rsquo;s most valuable employees: the field technicians who directly provide services and equipment to customers.</p>

<p>For obvious reasons, I can&rsquo;t go into great detail about the work I did at Pason. ¬†I will say, though, that it was extremely rewarding. ¬†I had the opportunity to work alongside some of the smartest developers I&rsquo;ve ever met, and I was able to do work that I felt had a tangible, significant and lasting impact on my team&rsquo;s product. That&rsquo;s a rare honor for an intern! ¬†From a technical perspective, I got to work with some interesting and unfamiliar technologies; I did extensive development in Python, created rich user experiences with HTML5 and JavaScript, and dabbled with C# when the need arose. ¬†The whole experience was hugely instructive, and I will always fondly remember my time at Pason. ¬†Of my entire education, my internship is without a doubt the part that I value most.</p>

<p>In September of this year, I moved back to Edmonton to finish my Computing Science degree at the University of Alberta. ¬†It being my final year and with most of my specific course requirements out of the way, I loaded up on computing science courses, which led to a fairly engaging but difficult semester. ¬†Among the courses I took were Advanced Games Programming in C++, Compiler Design, and Introduction to Computer Graphics.</p>

<p>As a term project for the Advanced Games Programming course, I undertook a modification of the <a href="http://skatgame.net/mburo/orts/" target="_blank">ORTS</a> game engine to allow user interface scripting with Lua, √† la World of Warcraft. ¬†I feel that the outcome of this project was a little underwhelming, as limited time and the complexity of ORTS forced me to settle for less comprehensive scripting capabilities than I would have liked. ¬†Nevertheless, I learned a great deal about Lua and the process of interfacing with Lua from C++. I think I now have an inkling of what&rsquo;s involved in creating a robust client-side scripting system as in World of Warcraft, or even a custom development platform like <a title="Ansca Mobile Corona" href="http://www.anscamobile.com/corona/" target="_blank">Corona</a>. ¬†Given the popularity of Lua as a scripting language in game development and my interest in developing games, I&rsquo;m sure it will be valuable experience.</p>

<p>Although I believe I would be within my academic rights to do so, for the time being I don&rsquo;t foresee myself releasing the source code for my Advanced Games Programming project. ¬†ORTS has not seen active development in a number of years, so it is outdated and difficult to compile and run, let alone modify. ¬†Additionally, my own work‚Äîbeing a school project as it is‚Äîwould probably not prove to be a good demonstration of Lua/C++ integration best practices, and I&rsquo;m always wary of releasing code from which others might learn the wrong way of doing things. ¬†I do have a report on the project which I&rsquo;d like to reproduce here at some point, though. ¬†</p>

<p>For University of Alberta Computing Science students, I have some advice which I&rsquo;d like to share regarding the Advanced Games Programming course.  If you already know C++, as I did, I would have to recommend against taking it. ¬†Much to my chagrin, the majority of the lectures were actually about C++ in and of itself, rather than algorithms and techniques relevant to games.  It certainly would be helpful for anyone who wants to pick up C++, but if you&rsquo;re looking for a thorough examination of game programming, look elsewhere.</p>

<p>Compilers was perhaps my favorite course of the semester, although it was also by far the most difficult. ¬†I would describe it as a strangely paradoxical course. ¬†The theory behind formal languages, parsing and code generation is not extremely complex, but it can be initially hard to grasp, as it is very heavy on jargon and has numerous rules and axioms to memorize. ¬†The process of building a <em>simple</em> compiler for a simple language is, in retrospect, fairly mechanical and manageable, but it seems anything but when approached without the benefit of hindsight. ¬†Overall, the course is just a staggering amount of work, but it is also among the most rewarding courses I&rsquo;ve taken.</p>

<p>Finally, Introduction to Computer Graphics, I got to expand upon the OpenGL knowledge I had built during the development of <a title="Puzzle Panel" href="http://www.mlindgren.ca/projects/puzzle-panel">my iOS game</a>, while also learning the fundamental aspects of computer graphics. ¬†Like Compilers, Graphics is a challenging but rewarding course, one of the most difficult aspects of it being the time commitment required. ¬†(Of course, it is also fairly math-heavy.) ¬†As someone who appreciates the beauty of a well-designed, simple algorithm, I found that learning about such achievements as the <a title="Wikipedia: Midpoint circle algorithm" href="http://en.wikipedia.org/wiki/Midpoint_circle_algorithm" target="_blank">midpoint circle algorithm</a>¬†was one of the most enjoyable aspects of the course. ¬†I feel that there&rsquo;s an almost Zen-like quality to a clever but simple algorithm which strips away preconceptions of complexity to accomplish a task in the most efficient manner possible. ¬†If you&rsquo;re of a similar mind, graphics is full of examples of such algorithms. ¬†Of course, working in graphics is also rewarding for its ability to produce visually interesting results, which is a rare treat in academic computing science:</p>

<div style="text-align: center; margin-left: auto; margin-right: auto;"><img style="display: block; margin-left: auto; margin-right: auto;" title="Shadow volumes" src="http://blog.mlindgren.ca/images/shadowvolumes.jpg" alt="A demonstration of shadow volumes from an Introduction to Computer Graphics assignment" width="386" height="335" /><em><small>A demonstration of shadow volumes from an Introduction to Computer Graphics assignment.</small></em></div>


<p>2010 and 2011 were exciting years for me, and although I&rsquo;m not ready to discuss it yet, I have something huge lined up for after I graduate in April of 2012. In the meantime, I&rsquo;ll continue to post here as often as I can manage. Thanks for reading, and happy new year!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ethical Game Design from Gamasutra]]></title>
    <link href="http://blog.mlindgren.ca/entry/2011/12/30/ethical-game-design-from-gamasutra/"/>
    <updated>2011-12-30T16:28:00-08:00</updated>
    <id>http://blog.mlindgren.ca/entry/2011/12/30/ethical-game-design-from-gamasutra</id>
    <content type="html"><![CDATA[<p>I came across a couple excellent articles on Gamasutra which I want to share here. The first, &ldquo;<a title="Contrivance and Extortion: In-App Purchases &amp; Microtransactions" href="http://www.gamasutra.com/blogs/AdamSaltsman/20111018/8685/Contrivance_and_Extortion_InApp_Purchases__Microtransactions.php">Contrivance and Extortion: In-App Purchases &amp; Microtransactions</a>&rdquo; is by <a href="http://adamatomic.com/" target="_blank">Adam Saltsman</a>, creator of Canabalt, among other games. He argues that in-app purchases and so-called microtransactions are being abused by some game developers, &ldquo;deliberately contriving their designs in the worst way in order to extort money from players, which is unethical and unacceptable design practice.&rdquo; I&rsquo;ll lay my cards on the table and say that I am in complete agreement with Adam. ¬†As he does in his <a title="Contrivance and Extortion II: Clarifications, Feedback &amp; Suggestions" href="http://www.gamasutra.com/blogs/AdamSaltsman/20111020/8703/Contrivance_and_Extortion_II_Clarifications_Feedback__Suggestions.php">explanatory follow-up</a>, I acknowledge that there are benefits to the &ldquo;freemium&rdquo; model, but the techniques commonly associated with that model are often used in a cynical, manipulative and profit-driven manner which I feel is harmful to consumers and the industry. Whether or not you agree, Adam&rsquo;s thoughts on the subject are certainly worth reading.</p>

<p>&ldquo;<a title="Radical Plagiarism: The Ethical Lessons of the Gamenauts Controversy" href="http://www.gamasutra.com/blogs/EvanJones/20110815/8195/Radical_Plagiarism_The_Ethical_Lessons_of_the_Gamenauts_Controversy.php" target="_blank">Radical Plagiarism: The Ethical Lessons of the Gamenauts Controversy</a>,&rdquo; by <a href="http://www.gamasutra.com/blogs/author/EvanJones/4235/">Evan Jones</a>, is equally thought-provoking. Evan recounts the cloning of the indie game <a href="http://www.bored.com/game/play/150995/Radical_Fishing.html"><em>Radical Fishing</em></a> by the more established indie studio <a href="http://gamenauts.com/">Gamenauts</a>, and adds his perspective on the cultural impact of the rampant cloning that takes place on mobile app stores. Returning readers may recall that I&rsquo;ve previously <a title="In Defense of Clones" href="http://www.mlindgren.ca/archives/318">defended the practice of cloning games</a>. My defense excluded the cloning of smaller titles by established studios, which I&rsquo;ve always viewed as morally questionable at best, but Evan&rsquo;s article nevertheless gave me pause. He provides a strong counterpoint to my own thinking on the matter, and while I&rsquo;m not yet ready to reverse my position, his argument has undeniable weight. If you&rsquo;re at all interested in game development, both articles are well worth your time.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to link GLUT in Qt Creator on OS X]]></title>
    <link href="http://blog.mlindgren.ca/entry/2011/09/21/how-to-link-glut-in-qt-creator-on-os-x/"/>
    <updated>2011-09-21T00:34:00-07:00</updated>
    <id>http://blog.mlindgren.ca/entry/2011/09/21/how-to-link-glut-in-qt-creator-on-os-x</id>
    <content type="html"><![CDATA[<p>This tutorial is for an extremely specific and possibly unusual set of circumstances, but I&rsquo;m hoping that it will prove useful to someone. For one of my courses this term, we&rsquo;re building OpenGL apps using Nokia&rsquo;s open source Qt framework. Qt provides some very nice scaffolding, and the Qt Creator IDE is among the best I&rsquo;ve used, although I imagine it lacks flexibility for general-purpose applications‚Äîthat is, you probably wouldn&rsquo;t use it to build non-Qt applications. Qt also allows one to easily write cross-platform C++ GUI applications. That said, linking procedures can be a bit different on different platforms, and as a beginner it&rsquo;s not always immediately obvious how instructions for Windows development translate into other environments.</p>

<!--more-->


<p>In particular, I found myself having difficulty linking the OpenGL Utility Toolkit (GLUT) with my project on Mac OS X. After much Googling and some frustration, I came up with the correct way to go about it, which is as follows:</p>

<ol>
    <li>In Qt Creator, open your project file (.pro) in the text editor. ¬†Right click on the text editor pane and select &#8220;Add Library&#8230;&#8221;</li>
    <li>Chose &#8220;System Library.&#8221;</li>
    <li>Locate the GLUT framework. ¬†On my Mac, running Lion, I used¬†<code>/Developer/SDKs/MacOSX10.7.sdk/System/Library/Frameworks/GLUT.framework</code>. However, it seems there are multiple different copies on the disk that you could use. ¬†If that path doesn&#8217;t work for you, just search for <code>glut.h</code> in Finder and you&#8217;ll find a copy of the framework. ¬†The path you enter into Qt Creator should point to a¬†<code>.framework</code> directory.</li>
    <li>Qt Creator will generate code in your project file which will link to the correct framework or library depending on which platform the code is being compiled on.</li>
    <li>Finally, because Apple loves to be different, the¬†glut.h¬†header path is different on OS X. ¬†<strong>You&#8217;ll need to¬†<code>#include &lt;GLUT/glut.h&gt;</code></strong>,¬†instead of¬†<code>&lt;gl/glut.h&gt;</code>¬†is usually the case. ¬†You can use preprocessor conditional statements to make this inclusion cross-platform:
<pre>#if defined(__APPLE__) || defined(MACOSX)
  #include &lt;GLUT/glut.h&gt;
#else
  #include &lt;gl/glut.h&gt;
#endif</pre>
</li>
</ol>


<p>That&rsquo;s it! If you have any trouble, leave a comment.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to reinstall OS X from a disc image using only one computer]]></title>
    <link href="http://blog.mlindgren.ca/entry/2011/09/21/how-to-reinstall-os-x-from-a-disc-image-using-only-one-computer/"/>
    <updated>2011-09-21T00:17:00-07:00</updated>
    <id>http://blog.mlindgren.ca/entry/2011/09/21/how-to-reinstall-os-x-from-a-disc-image-using-only-one-computer</id>
    <content type="html"><![CDATA[<p>My internship recently ended, and as such, I had to move from Calgary back to Edmonton, where I&rsquo;ll be completing the fourth year of my Computing Science degree at the University of Alberta. I hope to be able to write more about my internship later, but at the moment I want to share a handy trick I discovered for reinstalling OS X. The reason I bring up the move is that after I arrived in Edmonton, I found myself wanting to reformat my Mac Mini and re-install Snow Leopard, but my Snow Leopard disc was nowhere to be found. Luckily, as a semi-paranoid computer scientist with an abundance of disk space, I keep images of important discs on my network-attached storage device for just such occasions.</p>

<!--more-->


<p>Unfortunately, however, the Snow Leopard disc image is large enough that it can only be burned to a dual-layer DVD. I don&rsquo;t tend to keep writeable dual-layer DVDs lying around, so I needed a solution which required only the disc image itself. There are a number of methods available for installing OS X over the network, but none of them seemed to work for me‚Äîperhaps owing to the fact that I had only one Mac. Luckily, I discovered that you can install OS X from a separate partition on the same disk. Here&rsquo;s how:</p>

<ol>
    <li>First, you&#8217;ll need to re-partition your disk. Open Disk Utility and select the disk you want to use. Be sure to select the disk itself, rather than one of its partitions, which are indented beneath the disk.</li>
    <li>Click the + button to add a new partition, and drag the new partition&#8217;s section in the disk layout graph upwards until it&#8217;s large enough to store your operating system disc image. Apply the changes. It may take some time for the disk to be re-partitioned.</li>
    <li>Now, select the new partition from the list on the left. Go to the Restore tab, and restore your operating system disc image to the new partition.</li>
    <li>Once the restore is complete, restart your computer, holding Option (Alt) at start-up. This should bring up a list of available start-up disks. Choose your new partition.</li>
    <li>You should now be at the installer, and you can re-install to your primary partition. Once the installation is complete, delete your installation disc partition to and resize the primary partition to reclaim the extra space.</li>
</ol>


<p>That&rsquo;s it! In retrospect, it&rsquo;s completely obvious, but I haven&rsquo;t seen these instructions anywhere else on the web. This technique might be particularly useful for owners of Macs without disc drives.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rest in Peace, Jack Layton]]></title>
    <link href="http://blog.mlindgren.ca/entry/2011/08/22/rest-in-peace-jack-layton/"/>
    <updated>2011-08-22T20:36:00-07:00</updated>
    <id>http://blog.mlindgren.ca/entry/2011/08/22/rest-in-peace-jack-layton</id>
    <content type="html"><![CDATA[<p>I don&rsquo;t discuss politics on this site, but today warrants an exception. Canada has suffered a terrible loss with the death of Jack Layton, the leader of the federal New Democratic Party. He was an inspiring figure, hopeful and optimistic right to the end, and he devoted his life to the betterment of Canada and its citizens. He was taken from us far too soon, and will be sorely missed.</p>

<p style="text-align: center;"><a title="Jack Layton.  Click to view full resoltuon." href="http://blog.mlindgren.ca/images/jack_layout.jpg"><img src="http://blog.mlindgren.ca/images/jack_layton.jpg" alt="" width="658" height="370" /></a></p>


<p>Rest in peace.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[In Defense of Clones]]></title>
    <link href="http://blog.mlindgren.ca/entry/2011/07/14/in-defense-of-clones/"/>
    <updated>2011-07-14T22:23:00-07:00</updated>
    <id>http://blog.mlindgren.ca/entry/2011/07/14/in-defense-of-clones</id>
    <content type="html"><![CDATA[<p>With the phenomenal and growing successes of the iPhone App Store, the Android Market, and the Xbox Live Indie Games marketplace, gamers have seen an unprecedented number of titles which could be described as &#8220;clones&#8221; of more successful games&mdash;or rip-offs, if you&#8217;re feeling less kind.  Along with these titles has come a veritable tsunami of hatred for their developers, from game critics and anonymous Internet commenters alike.  The commercial success of some of these titles, such as <em>Angry Birds</em>,<sup>1</sup> has shown that average gamers are happy to patronize any developer who can provide a fun experience, regardless of originality.  However, any mention of a new clone on a gaming blog or podcast inevitably brings about a stunning amount of vitriol from gamers who, presumably, are upset that their favorite megacorporations aren&#8217;t getting their due.<!--more--></p>




<p>I don&#8217;t understand this, but my best guess it that it stems from a misunderstanding of the motivations of game developers, and of the development process itself.  I hope that by illuminating those things I can do something to stem the tide of rage and indignation.  First, though, I&#8217;d like to briefly discuss the legality of game clones.  The patentability and copyrightability of game mechanics and &#8220;look and feel&#8221; varies from country to country.  Notably, the <a href="http://www.epo.org/law-practice/legal-texts/html/epc/2010/e/ar52.html" target="_blank" title="European Patent Convention, Article 52">European Patent Convention explicitly states</a> that &#8220;schemes, rules and methods for performing mental acts, playing games or doing business, and programs for computers&#8221; are not patentable, whereas no such restriction exists in the United States.  There are <a href="http://www.gamasutra.com/view/feature/2315/its_just_a_game_right_top_.php" target="_blank" title="Gamasutra: It's Just a Game, Right? Top Mythconceptions on Patent Protection of Video Games">several notable examples</a> of game-related patents in the United States, but the industry is young and there are relatively few legal precedents on their enforceability.  I am not a lawyer, so it would be unwise of me to assert too much here, but I will state that throwing around terms like &#8220;copyright infringement&#8221; is neither productive nor terribly meaningful when discussing game clones.</p>




<p>I&#8217;d also like to make clear that by &#8220;clone,&#8221; I mean a legitimately developed game with similar gameplay mechanics and/or art style to an established title.  I am emphatically <em>not</em> referring to situations in which actual code or art assets have been used without permission; under no circumstances do I condone actual copyright infringement.  Finally, in the interest of full disclosure, I should also inform you that I have a dog in this race, so to speak: my game, <em><a href="http://www.mlindgren.ca/projects/puzzle-panel">Puzzle Panel</a></em>, borrows gameplay mechanics from <em><a href="http://en.wikipedia.org/wiki/Tetris_Attack" target="_blank">Tetris Attack</a></em> and takes artistic cues from <em><a href="http://en.wikipedia.org/wiki/World_of_Warcraft" target="_blank">World of Warcraft</a></em>.</p>




<div style="margin-right: auto; margin-left: auto; text-align: center;">
<a href="http://blog.mlindgren.ca/images/puzzlepanel_tetrisattack.jpg" title="Click to view full size."><img src="http://blog.mlindgren.ca/images/puzzlepanel_tetrisattack.jpg" alt="Comparison screenshot of Puzzle Panel and Tetris Attack" title="Comparison screenshot of Puzzle Panel and Tetris Attack.  Click to view full size." width="651px" height="320px" /></a><br />
<span><small>A comparison between Puzzle Panel, left, and Tetris Attack.</small></span>
</div>




<p><em>Tobar</em> for iOS is a recent example of the kinds of titles I&#8217;m talking about.  The game is a fairly obvious mimicry of <em><a href="http://supermeatboy.com" target="_blank">Super Meat Boy</a></em>, and while <em>Meat Boy</em> co-creator Edmund McMillian is relatively unperturbed by it, many of his fans are less forgiving.  I&#8217;m going to pick on the <a href="http://destructoid.com">Destructoid</a> community here for no other reason than that Destructoid is one of my favorite gaming publications, but a quick Google search reveals no shortage of hatred for <em>Tobar</em>.<sup>2</sup>  <a href="http://www.destructoid.com/meat-boy-dev-has-mixed-feelings-about-ios-knock-offs-205886.phtml#comment" target="_blank" title="Meat Boy dev has mixed feelings about iOS knock-offs - Destructoid">Destructoid user Noir Trilby writes</a>:</p>




<p><blockquote>What a shameless rip off. It&#8217;s good that Ed is cool about it and all, but if I was him I&#8217;d be raging. Both Apple and Android need someone doing some quality control on their aming services to screen out blatant rip offs like this.</blockquote></p>




<p>Even associate editor Jonathan Holmes goes so far as to say that the game &#8220;makes him frown,&#8221; which&mdash;though it doesn&#8217;t sound it&mdash;is fairly significant criticism coming from a man so kind and gentle as to have probably never said a genuinely hurtful thing is his life.</p>




<p>As I&#8217;ve already mentioned, I don&#8217;t think <em>Tobar</em>, nor other games like it, deserve the hate they receive.  There are a number of reasons why I feel this way.  First, all art is iterative, and video games are no exception.  Creativity is not binary, but is a matter of degree.  Second, when indie developers borrow from established properties, there&#8217;s little evidence that it&#8217;s detrimental to the owners of those properties, whereas it may be extremely beneficial to consumers.  Finally, I feel that there&#8217;s a misconception that games like <em>Tobar</em> exist because lazy, greedy developers want to make a quick buck and can&#8217;t be bothered to do the work to come up with an original title.  That perception is wrong on many levels, which I&#8217;ll discuss in further detail in the following paragraphs.</p>




<p>The apparent trend of smaller developers &#8220;ripping off&#8221; well known games is probably an illusion.  It&#8217;s likely that these are simply the instances of liberal borrowing that we hear about, due to the popularity of the &#8220;borrowee.&#8221;  Take <em>Angry Birds</em>, for example.  Most people would point to it as an example of a successful, original title by a studio that was relatively small at the time of its release.  The truth is that although its art style is unique, its gameplay mechanics are borrowed heavily from an older flash game called <em><a href="http://armorgames.com/play/3614/crush-the-castle" target="_blank">Crush the Castle</a></em>.  Or how about <em>Super Meat Boy</em>?  It surely owes some of its success to predecessors such as <em><a href="http://www.gamemakergames.com/archive/jumper-two" target="_blank">Jumper Two</a></em>, <em><a href="http://kayin.pyoko.org/iwbtg/" target="_blank">I Wanna Be The Guy</a></em>, and <em><a href="http://www.thewayoftheninja.org/" target="_blank">N+</a></em>.</p>




<div style="margin-right: auto; margin-left: auto; text-align: center;">
<a href="http://blog.mlindgren.ca/images/smb_nplus_j2_iwbtg.jpg" title="Click to view full size."><img src="http://blog.mlindgren.ca/images/smb_nplus_j2_iwbtg.jpg" alt="Comparison screenshot of Super Meat Boy, N+, Jumper Two, and I Wanna Be The Guy" title="Comparison screenshot of Super Meat Boy, N+, Jumper Two, and I Wanna Be The Guy.  Click to view full size." width="651px" height="320px" /></a><br />
<span><small>A comparison between Super Meat Boy, N+, Jumper Two, and I Wanna Be The Guy.</small></span>
</div>




<p>Granted, each of these games have their own original elements, whereas <em>Tobar</em> at least appears to be a fairly direct attempt at reproducing <em>Super Meat Boy</em>.  But every great game stands on the shoulders of giants, and every developer has to start somewhere.  Games like <em>Tobar</em> should not be condemned as soulless exercises in profiteering, but recognized for what they are: a means for inexperienced developers to hone their skills while contributing to new markets, much as a musician might start out by covering popular songs in venues where the original artist would never perform.</p>




<p>Words like <em>stealing</em> and <em>theft</em> are often thrown around in discussions of game clones.  But one of the defining characteristics of theft is that it deprives the owner of his or her property.  What harm is the existence of <em>Tobar</em> doing to Team Meat?  Given that Team Meat&#8217;s Tommy Refenes has publicly stated that he has &#8220;no intentions on doing anything for iPhone or iPad ever&#8230;I hate the [iPhone and iPad] platforms and I hate the [app] stores,&#8221; <em>Tobar</em> is in no sense a competitor to <em>Super Meat Boy</em>.  I don&#8217;t know the developer of <em>Tobar</em>, but I&#8217;d wager that his intent was simply to bring gameplay he loves to a new platform that he&#8217;s passionate about.</p>




<p>Passion is exactly why I created <em>Puzzle Panel</em>; I wasn&#8217;t looking to make quick money by ripping off someone else&#8217;s creativity and putting it on a new platform.  Rather, I wanted to share a game that I loved with an audience who might have never seen it before, on a platform where it was unlikely to ever see the light of day otherwise.  I am not a veteran game critic who values unique mechanics above all else because he&#8217;s seen most gameplay elements a thousand times before, nor am I a would-be <em>artiste</em> desperately attempting to create a legacy for himself.  For these reasons, I value fun over originality.  If people enjoy my game, that is enough for me.  If a nervous child at the doctor&#8217;s office finds solace in something I&#8217;ve created, my work has paid off immeasurably.  If I can contribute just a little more happiness to someone&#8217;s life, I am satisfied.</p>




<p>&#8220;If the motivations of indie developers are purely in the interest of gamers,&#8221; you might ask, &#8220;why charge money for these clones?&#8221;  Well, the reasons are simple.  First, we&#8217;re human, and we need to eat; it&#8217;s nice to get paid for one&#8217;s work, even when said work is not completely novel.  Second, even discounting the dozens or hundreds of hours of effort required to make the simplest of games, there are significant up-front costs to developers in creating games.  Developer licenses, development software, test hardware, and licensed or commissioned music, sound effects and graphics add up very quickly.</p>




<p>I did all of the programming and artwork myself for <em>Puzzle Panel</em>, as well as much of the sound, and it still cost me over $1,000 to make.  To a student, that is a great deal of money.  I charged a dollar for the game, but in the end I recouped <em>none</em> of the cost of creating it.  I don&#8217;t regret a thing, but this illustrates the point that game development is anything but a quick and surefire way to get rich.  For every developer making money on their games, there are literally tens of thousands who sink in countless hours and significant money, only to receive nothing in return.  That being the case, I don&#8217;t give much credence to the argument that developers such as <em>Tobar</em>&#8217;s are just in it for the money.</p>




<div style="margin-right: auto; margin-left: auto; text-align: center;">
<a href="http://www.mobileappleme.com/paid-applications-on-the-app-store-from-360idev" title="Click for more information on App Store economics." target="_blank"><img src="http://blog.mlindgren.ca/images/pinchmedia_appstore.png" alt="Graph of App Store download distribution for paid apps.  The top 10% of apps receive more than 80% of downloads.  Click for more information on App Store economics." title="Graph of App Store download distribution for paid apps.  The top 10% of apps receive more than 80% of downloads.  Click for more information on App Store economics." width="600px" height="450px" /></a><br />
<span><small>PinchMedia&#8217;s statistics show that the top 10% of paid apps receive more than 80% of all downloads; most developers are left in the cold.</small></span>
</div>




<p>Thus far I&#8217;ve been writing specifically about indie developers.  I&#8217;d be remiss to not mention that established, big-budget studios often clone each other&#8217;s games, or worse, the games of indie developers.  I&#8217;m much less sympathetic to this; like Jonathan Holmes with <em>Tobar</em>, I certainly frowned when I read about <a href="http://www.destructoid.com/capcom-copies-splosion-man-with-maxplosion-191411.phtml">Capcom&#8217;s obvious copy of indie hit <em>&#8216;Splosion Man</em></a>.  But although I personally find this distasteful, I still don&#8217;t see a great need for alarm.  A well-made, original title which has found an audience has little to fear from pretenders.</p>




<p>Now, please don&#8217;t misunderstand me.  I am by no means saying that every developer should just go out and rip off the biggest franchise he can because there&#8217;s nothing wrong with unoriginality.  On the contrary, innovation and creativity should be encouraged and rewarded, and while I think it&#8217;s fine for hobbyist programmers to start out by mimicking their favorite titles, we should definitely turn a more critical eye to established studios who have the time, budget and experience to be original but are content with releasing an endless stream of sequels, clones and remakes.  But please, let&#8217;s cut the indie developers some slack.  Cloning a popular game to make a quick buck is simply not a winning proposition.  Regardless of their originality, regardless of their financial success or failure, I can assure you that indies do it for the love.</p>


<p><sup>1</sup> <small>Although it has its own unique art style, I count <em>Angry
Birds</em> among the clones for its striking similarities to Armor Games&#8217;
<em>Crush the Castle</em>.</small><br/>
<sup>2</sup> <small>Ironically, the &ldquo;negative&rdquo; publicity <em>Tobar</em> is generating will probably help its sales more than anything else could have.</small></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What are lambdas good for, anyway?]]></title>
    <link href="http://blog.mlindgren.ca/entry/2011/06/29/what-are-lambdas-good-for-anyway/"/>
    <updated>2011-06-29T22:27:00-07:00</updated>
    <id>http://blog.mlindgren.ca/entry/2011/06/29/what-are-lambdas-good-for-anyway</id>
    <content type="html"><![CDATA[<p>I had a discussion today about what lambda functions are used for, how they differ from regular functions, and why they&rsquo;re important. I thought I&rsquo;d reproduce it here, as it seems that lambdas are often thought of as confusing and obscure. The truth is that they&rsquo;re very simple, and also quite powerful. While they can reduce readability if used incorrectly, they do serve an important purpose, and those who understand them should have nothing to fear from them. This discussion pertains specifically to lambda functions as they&rsquo;re implemented in Python, but they&rsquo;re very similar in other languages where they&rsquo;re available.<!--more--></p>

<p>I think the best way to explain lambdas is with a simple example. Say you want a switch statement. Python doesn‚Äôt have them, but what you can do is set up a dictionary and get a value out of it, which is sort of like a switch. However, you can&rsquo;t do this&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">my_dict</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>            <span class="mi">1</span> <span class="p">:</span> <span class="n">my_func1</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">),</span>
</span><span class='line'>            <span class="mi">2</span> <span class="p">:</span> <span class="n">my_func2</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">)</span>
</span><span class='line'>          <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&hellip;because the functions will be evaluated when the dictionary is initialized, so if they modify any state (or if they just take a while to execute) you‚Äôll get bad behaviour. Functions are first class objects in Python, so you could insert the functions into the dictionary like so‚Ä¶</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">my_dict</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>            <span class="mi">1</span> <span class="p">:</span> <span class="n">my_func1</span><span class="p">,</span>
</span><span class='line'>            <span class="mi">2</span> <span class="p">:</span> <span class="n">my_func2</span>
</span><span class='line'>          <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&hellip;but that doesn&rsquo;t work either, because you don‚Äôt know how many (or which) arguments you need to pass to the function when you pull it out of the dictionary. So, what to do?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">my_dict</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>            <span class="mi">1</span> <span class="p">:</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">:</span> <span class="n">my_func1</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">),</span>
</span><span class='line'>            <span class="mi">2</span> <span class="p">:</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">:</span> <span class="n">my_func2</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">)</span>
</span><span class='line'>          <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Lambdas solve the problem because they&rsquo;re evaluated lazily. By being wrapped in
a lambda, the functions won‚Äôt be evaluated until the lambda itself is called.
Furthermore, you can use the lambda to normalize the parameters of each
function, so that you can always call it using <code>my_dict[my_var](x, y, z)</code>, even though the first function being called doesn‚Äôt actually make use of the z parameter. There is no other way to accomplish this in Python, besides a big long ugly list of ifs. (Obviously you‚Äôd normally reserve this technique for situations where you have more than two options.)</p>

<p>You can also use the laziness aspect of lambdas to refer to variables which haven&rsquo;t been declared yet, although I&rsquo;d recommend against that because it can become quite confusing. Anything within the lambda is evaluated only when the lambda is called.</p>

<p>And there you have it! Those are the basics of lambdas in Python. Of course, the above is only a trivial example of what can be accomplished with lambdas.  If you&rsquo;d like to learn more, there&rsquo;s a great write-up available <a title="Lambda functions in Python" href="http://www.secnetix.de/olli/Python/lambda_functions.hawk">here.</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I'm considering switching back to iOS. Here's why.]]></title>
    <link href="http://blog.mlindgren.ca/entry/2011/06/12/im-considering-switching-back-to-ios-heres-why/"/>
    <updated>2011-06-12T22:13:00-07:00</updated>
    <id>http://blog.mlindgren.ca/entry/2011/06/12/im-considering-switching-back-to-ios-heres-why</id>
    <content type="html"><![CDATA[<p><em>In September of last year I ditched my iPhone 3G and switched to the Android-powered HTC Desire (which I later sold in order to purchase a Desire Z, which sports a physical keyboard.)  I&#8217;m sad to report that I&#8217;m now considering switching back to iOS, after less than a year on the Android platform. ¬†The following is an excerpt from an e-mail I wrote to a friend of mine whom I&#8217;d describe as a fervent Android evangelist, detailing some of the frustrations I have with the operating system and why I feel that I might be better served by iOS. ¬†I&#8217;ve edited it slightly to make it more readable for anyone who might come across this blog.</em></p>




<p><em>I really want to like the Android platform, and writing this gave me no joy.  There are two reasons I&#8217;m posting it here, though.  The first is simply that the purpose of this website is for me to post about my programming and my experiences with technology (as well as whatever else catches my fancy.)  The second is that I hope that sharing my honest opinion about Android might be helpful to anyone considering a phone purchase.</em></p>


<!--more-->




<p>As mentioned on Twitter, my number one complaint is having to use custom ROMs.  <em>There are always problems</em> with custom ROMs.  <a href="http://www.cyanogenmod.com/">CyanogenMod 7</a> caused my phone to reboot at random.  I also had problems with the Contacts app crashing. ¬†All of these issues persisted throughout multiple versions of CM7 up to and including final.</p>




<ul>
    <li>With the ROM I&#8217;m using now (a custom Sense ROM, can&#8217;t remember the exact name), I can&#8217;t set the SSID/password on my WiFi hotspot because Settings crashes when I try to. ¬†I seriously haven&#8217;t used a single custom ROM that hasn&#8217;t had some issues with it.</li>
    <li>You mentioned that Google is promising quicker updates, but I&#8217;ll believe it when I see it. ¬†Are they actually forcing manufacturers to do this in order to use Android branding or get Google apps, or are they just asking nicely? ¬†The latter won&#8217;t work. ¬†And as far as I know, all that the Android update committee has promised is 18 months of updates following the launch of a new device. ¬†So does that mean if I release a device and then push a point release to consumers 17 months later, I&#8217;ve fulfilled that? All I see here is flowery language, and frankly I don&#8217;t think anything is going to improve.<br /><br />

The fact is that it&#8217;s not profitable for these manufacturers to update existing devices when they could spend the same development effort on releasing another six phones, so unless Google does something to change that, nothing will happen.</li>
</ul>




<p>The rest are in no particular order:</p>




<ul>
    <li>No good Exchange client available. ¬†Even Touchdown, which is expensive, is pretty bad. ¬†The HTC client is okay, but it <del datetime="2011-06-12T02:36:52+00:00">doesn&#8217;t support important features like threading.</del> [I later realized that this is untrue; the HTC client does support threading.  I still find it cumbersome to use, and I&#8217;ve previously had problems with it failing to send messages without any notification of the failure.  That&#8217;s a pretty big problem when you&#8217;re using it for work e-mail.]</li>
    <li>Launcher redraw, agghhhhhh. ¬†Sense is horrendous for this, but I much prefer the built-in Sense apps to their Google alternatives, so I feel like I&#8217;m stuck using it. ¬†Even on stock Android, it seems like I can&#8217;t really use live wallpapers or I have to wait for the launcher to reload all the time.</li>
    <li>It&#8217;s annoying that when I read an e-mail in Gmail on my computer, the notification for it stays in my notification bar. ¬†Also, my Gmail push seems to have stopped working of late. ¬†To be fair, it remains to be seen how the new iPhone notification system handles these things.</li>
    <li>I&#8217;ve noticed that with multiple IM clients (specifically, AIM and eBuddy) if I leave them running in the background while I&#8217;m doing other things like browsing the Internet, I&#8217;ll eventually get signed out or the app will close. ¬†I don&#8217;t know if this is just because they&#8217;re not written correctly, but it&#8217;s annoying; IM is the only thing I really use background applications for and it doesn&#8217;t seem to work consistently.</li>
    <li>I often have trouble sending/receiving MMS. ¬†It&#8217;s frustrating when someone sends me an MMS and I have to ask them to e-mail it to me instead because it won&#8217;t download.</li>
    <li>Camera quality on the Desire Z is pretty bad. ¬†I&#8217;m certain the iPhone 4 is better in this department. ¬†I feel like my Desire Z&#8217;s camera is actually worse than my Desire&#8217;s camera for still photos (although it&#8217;s better for video.)  This isn&#8217;t a strike against Android in particular, but the problem of lower-quality hardware is endemic to the platform in a certain sense.</li>
    <li>A lot of apps in the Android market are just very poor quality. The iPhone app store has its fair share of bad apps, but I still feel like the average quality is much higher there. ¬†In particular, any app that&#8217;s available for both platforms is almost always better on iPhone. ¬†A prime example is Facebook. ¬†The Android client was horribly broken for several weeks, and regardless of that, it just doesn&#8217;t support the same feature set as the iPhone version (e.g. watching videos.)</li>
    <li>I complained about this even before I bought an Android phone, but the Android operating system is sometimes just not very responsive. ¬†Scrolling is sometimes smooth, but rarely as smooth as on iPhone/Windows Phone 7. ¬†Minor annoyance, but an annoyance nonetheless.</li>
    <li>I&#8217;m not sure if you&#8217;re familiar with the life cycle of an app in Android, but basically every different screen you can go to in an app is a separate &#8220;activity&#8221;&mdash;essentially a separate application. ¬†<em>What were they thinking</em> in designing it like this? It causes so many problems. ¬†Any time the &#8220;state&#8221; of the phone changes (e.g. you rotate the device, the phone leaves/enters roaming, etc.) the activity is destroyed and re-created unless developers manually override this behavior. ¬†This is why, for instance, the keyboard often disappears if you have it open and then rotate the phone. ¬†(Highly polished apps like Twitter handle rotation properly, but don&#8217;t be fooled; it&#8217;s not the default behavior.  Many other apps do not handle rotation very well.)  Other examples of activity recreation problems include pop-up dialog boxes disappearing and fields losing focus.</li>
    <li>Editing text sucks; I find that my phone never seems to do what I want it to when I&#8217;m trying to highlight or copy and paste some text.</li>
    <li>I&#8217;ve had problems on both of my Android phones with the music player pausing in the middle of a song at random.  This has happened in multiple different media players.  It&#8217;s as though the phone thinks the headphones are being removed when they are in fact still in place.</li>
    <li>I like being able to set alarm/ringer/media volume separately (although the iPhone can also do this), but I don&#8217;t like that the defaults on Android aren&#8217;t very sensible. ¬†For instance, if I have my ringer silenced, it probably means that I also want my media silenced. ¬†But that&#8217;s not what happens if I just use the volume button; I have to actually go into settings and change the media volume separately.</li>
    <li>Sometimes Google Talk just flat out refuses to start for me until I reboot my phone. ¬†This happened on multiple ROMs. ¬†On the Desire I noticed that it seemed to refuse to start when I was low on internal storage. ¬†I&#8217;m not sure why it does it on my Desire Z. ¬†This should be a core platform feature on par with BBM, but it seems to be very poorly supported.</li>
    <li>From a developer perspective, I hate paying a development fee to Apple to be able to install my apps on a non-jailbroken device. ¬†I hate that once you&#8217;ve written an iPhone app, they basically blackmail you into continuing to pay them because otherwise they take down your app, which means that it may not be accessible to paying customers if they need to wipe their phone and re-install their apps. ¬†I hate their greedy policies with regards to content subscriptions. ¬†I hate their underhanded payment system which is, as a matter of statistical certainty, allowing them to make interest on millions of dollars that are nominally owed to developers but will never actually be paid. ¬†In general, I hate that they treat their developers like serfs just because they can, even though those same developers made their platform what it is today.<br /><br />

I hope that properly illustrates how much I hate Apple&#8217;s policies, and I hope that it underscores the significance of what I&#8217;m about to say: from a pragmatic perspective, I&#8217;d¬†<em>still</em> rather be developing for iOS because Google&#8217;s development tools are¬†<em>complete garbage.</em> I write all my code in vim, so I&#8217;m really not that picky, but I can only take so much of using Eclipse and having it literally¬†<em>delete</em> my art assets from the file system. ¬†(Not just removing them from the project - it literally deletes the files, seemingly at random. ¬†I&#8217;ve never lost any work because of this, but it&#8217;s extremely frustrating nevertheless.) ¬†Not to mention the Android emulator: it&#8217;s practically unusable for regular apps, and for games, forget about it. ¬†You&#8217;re lucky if you get 5 FPS.<br /><br />

Even if I buy an iPhone, I do still want to finish my game for Android. ¬†The code is cross-platform, so if I could compile and test it using Xcode in the meantime&#8230; even just using the iPhone simulator, since it can actually run games at a reasonable framerate&#8230; it would save me a lot of headaches. ¬†Either way I&#8217;ll have to compile my app for Windows or iOS to do any marketing; taking screenshots of an Android app is difficult, and taking video is, as far as I can tell, impossible unless you have a phone with HDMI out and a capture card. ¬†Ridiculous.</li>

    <li>The behavior of the back button is inconsistent, and developers use it as
    a crutch rather than thinking about and carefully designing a proper workflow
    through their applications. ¬†I was arguing about this behavior with someone on
    Reddit a while ago, and I found a good comment on Hacker News about it:
    <br/><br />

<blockquote>I just got an Android with that great Virgin Mobile deal, and I was surprised
at just how much the Back button is used in almost all contexts. It&#8217;s severely
overloaded: want to get out of an on-screen keyboard? Back. Want to move back
a screen? Back, except when it&#8217;s Google Reader that opened a Browser window,
in which case it takes you back to the previous page that Browser had. Back
through a menu? Back. Back to a previous page in Browser? Back.

It&#8217;s as if people just substituted the button for any instance in human language
where &#8220;back&#8221; was used.&#8221;</blockquote>

&#8230;(and another)&#8230;<br /><br />

<blockquote>&#8220;Back&#8221; to some random place most of the time.<br />
1. receive email notification for two messages.<br />
2. click notification bar<br />
3. go to gmail app.<br />
4. open first message and click a link.<br />
5. you are now in the browser. (clicking back will close the window, but you want to read it later!)<br />
6. you long press HOME button (hoping to select gmail and read the other message)<br />
7. gmail is not in the open app list (WTH?!)\<br />
8. you curse, click home, find the gmail app, click it.<br />
9. now you are on the message with the link<br />
10. press BACK<br />
11. now you are on the message list (aha! not you home screen you came from!)<br />
12. click the 2nd message and read it
</blockquote>

In fairness, I&#8217;m of two minds about this because the back button does save a lot of screen real-estate by removing the necessity for on-screen navigation controls.  However, I&#8217;m not sure how much of an advantage that is in the face of the confusion it sometimes causes.</li>

<li>[This wasn&#8217;t included in my e-mail to my friend, because I didn&#8217;t know about it at the time.  I&#8217;m adding it now because it&#8217;s fairly important.] Android can actually <em><a href="http://forum.xda-developers.com/showthread.php?p=12765846">lose SMS messages.</a></em>  That&#8217;s completely unacceptable on a phone.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android UI/UX gripes]]></title>
    <link href="http://blog.mlindgren.ca/entry/2011/04/16/android-uiux-gripes/"/>
    <updated>2011-04-16T22:08:00-07:00</updated>
    <id>http://blog.mlindgren.ca/entry/2011/04/16/android-uiux-gripes</id>
    <content type="html"><![CDATA[<p>The week before last, whilst browsing <a href="http://reddit.com">Reddit</a> I came across a blog by the name of <a href="http://android-gripes.tumblr.com/">&ldquo;Android Gripes.&rdquo;</a> The name is perhaps a bit misleading, as it&rsquo;s not actually a blog by an Android user hoping to spur Google into making UI improvements, as I would have expected.  It is, rather, a blog by a self-proclaimed Apple fanboy (though he&rsquo;s recently <a href="http://www.reddit.com/r/Android/comments/glbjz/android_gripes_why_do_apps_from_the_same_company/c1ogv3q">edited his about page to remove that admission</a>) complaining about Android for the sake of&hellip; well, complaining about Android.<!--more--></p>

<p>That might be a little unfair.  Perhaps I should let the author speak for himself:</p>

<blockquote>I have constantly heard many gripes about Android. Recently I happened to have access to some Android phones and use them in a daily base. The more I use Android, the more I feel that Android is indeed a half-baked OS, its UX/UI is horrible and various hardwares are poorly designed. It‚Äôs true that those phones are working like smartphones, better than feature phones from old school, but they ignore a lot of the details. Just for Google‚Äôs own benefit, they helped handset manufactures brutally dumped a huge amount of unpolished devices to the market. They made people think this is how smartphones should work. This is so unfair to consumers. <strong>IMHO, it is no different from committing a crime.</strong> That‚Äôs why I made the cartoon of &#8220;Android Gripes&#8221; as a Monopoly &#8220;Go Directly To Jail&#8221; card showing an Android on it.

As much as I believe in Apple, I think everybody deserves great user experience, especially when it comes to phones. I think it is my mission to let more people know that Android does not provide you that. Android only provides inferior user experience. You either admit it and bear with it, or go for better alternatives. That‚Äôs why I started writing this blog.</blockquote>


<p>(Emphasis added.)  English is not the author&rsquo;s native language, so you&rsquo;ll have to excuse the occasionally odd grammar.  It&rsquo;s immediately apparent that the author&rsquo;s stated opinion of Android is patently absurd; bad UI/UX can have many negative consequences, but it is certainly not criminal.  Redditors have also <a href="http://www.reddit.com/r/Android/comments/glbjz/android_gripes_why_do_apps_from_the_same_company/">pointed out</a> that a number of comparisons the Android Gripes author makes are somewhat unfair.  For instance, he <a href="http://android-gripes.tumblr.com/post/4409289546/why-do-apps-from-the-same-company-look-worse-on-android">compares old, oudated Android apps</a> against apps which were recently updated on iOS, and misleadingly remarks on &ldquo;extra&rdquo; (meaning blank) space in the Facebook app.  The blank space in question <em>does</em> contain content when one is signed into a legitimate profile.</p>

<p>With all of that said, I&rsquo;m not writing this post to refute the Android Gripes author.  I actually agree with an unfortunate number of his points.  While there&rsquo;s a lot that can be said about where the iPhone&rsquo;s UI/UX fails (I&rsquo;ve <a href="http://www.mlindgren.ca/archives/151">previously mentioned</a> their complete lack of a workable notification system), excuses and rationalizations won&rsquo;t do anything to improve the state of Android apps.  Even if you believe that Android&rsquo;s UI/UX is better than Apple&rsquo;s (and I do feel that that&rsquo;s a hard case to make), I think it&rsquo;s undeniable that there&rsquo;s room for improvement.  It&rsquo;s certainly worth mentioning that some of the Android Gripe&rsquo;s authors examples are misleading, but what&rsquo;s more important is that we‚Äîthat is to say, Android developers‚Äîask ourselves where we&rsquo;re failing users, why it&rsquo;s happening, and what we can do to improve the platform.  In a future post, I&rsquo;ll offer my perspective on where Android could be improved.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android NDK Stack Trace Script]]></title>
    <link href="http://blog.mlindgren.ca/entry/2011/04/09/android-ndk-stack-trace-script/"/>
    <updated>2011-04-09T16:30:00-07:00</updated>
    <id>http://blog.mlindgren.ca/entry/2011/04/09/android-ndk-stack-trace-script</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve finally started doing some Android development in earnest, and because I have a stubborn dislike of Java, I&rsquo;ve decided to use the <a href="http://developer.android.com/sdk/ndk/index.html">Native Development Kit</a>.  The native development kit allows you to write &ldquo;performance-critical&rdquo; parts of your application in C or C++ code, which is then compiled to platform-native ARM or MIPS instructions.  The NDK is something of an unfriendly beast; it makes interaction with most regular Android libraries very difficult, and debugging native code on Android is none too easy.  Although Google provides a script which can attach gdb to your native code, I&rsquo;ve not yet figured out how to use it properly; every time I execute it, gdb complains about missing debugging symbols and libraries and seems to be unable to do anything useful.  (I don&rsquo;t imagine it&rsquo;s too difficult, but I haven&rsquo;t spent much time on it‚ÄîI&rsquo;ve not needed to do much debugging yet.)<!--more--></p>

<p>When your native code crashes due to a segmentation fault or some other similar problem, though, you do get a nice stack trace in the Android debugging log, which you can view with <code>adb logcat</code>.  Unfortunately, the stack trace only gives you memory addresses, and you need to use another script to convert those memory addresses to lines of code.  That script is already included with the NDK, but it&rsquo;s a bit of a pain to use.  To that end, I&rsquo;ve put together a simple shell script which glues everything together. I should mention that this is designed to be used with Linux or Mac OS X; if you&rsquo;d like to do something similar on Windows, I&rsquo;m sure it won&rsquo;t be hard, but you&rsquo;re on your own. ¬†Here&rsquo;s how to use it:</p>

<ol>
    <li>Create a folder in your project called &#8220;debug&#8221; (or whatever name you&#8217;d like)</li>
    <li>Create a file called <code>debug.sh</code>, consisting of the following:

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/usr/bin/env bash</span>
</span><span class='line'>NDK_ROOT/toolchains/arm-eabi-4.4.0/prebuilt/linux-x86/bin/arm-eabi-objdump -S PATH_TO_SOLIB &gt; SOLIB_NAME.arm
</span><span class='line'>adb logcat -d &gt; logcat.txt
</span><span class='line'>python parse_stack.py SOLIB_NAME.arm logcat.txt
</span></code></pre></td></tr></table></div></figure>

    <li><code>chmod +x debug.sh</code> so that it&#8217;s executable</li>
        <li>Run the script with <code>./debug.sh</code> each time you need to see a stack trace</li>
</ol>


<p>Obviously there are a few things you&rsquo;ll need to replace in the above code.  <code>NDK_ROOT</code> should be the path to your Android NDK installation.  <code>PATH_TO_SOLIB</code> should be the path to your compiled shared object library.  Usually this will be in your project folder under <code>obj/local/armeabi</code>.  <code>SOLIB_NAME</code> can really be whatever name you want, but I liked to name the <code>.arm</code> file after the corresponding <code>.so</code> file for consistency.</p>

<p>You should repeat line 2 for each shared object library you need to debug in your project, and repeat line 4 for each corresponding <code>.arm</code> file.  However, note that the <code>arm-eabi-objdump</code> process is quite slow, so if you have any large <code>.so</code> files which don&rsquo;t change frequently, you can skip dumping them to improve speed.  Just remember that if they do change, you&rsquo;ll need to dump them again to get accurate results.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Non-Myths About Programming]]></title>
    <link href="http://blog.mlindgren.ca/entry/2011/02/03/non-myths-about-programming/"/>
    <updated>2011-02-03T20:53:00-08:00</updated>
    <id>http://blog.mlindgren.ca/entry/2011/02/03/non-myths-about-programming</id>
    <content type="html"><![CDATA[<p>Whilst browsing <a href="http://reddit.com" target="_blank">Reddit</a> today, I came across a short essay by <a href="http://stwww.weizmann.ac.il/g-cs/benari/" target="_blank">Mordechai Ben-Ari</a> titled &ldquo;<a title="PDF: Non-Myths About Programming" href="http://stwww.weizmann.ac.il/G-CS/BENARI/articles/nonmyths.pdf" target="_blank">Non-Myths About Programming</a>&rdquo; (PDF warning). ¬†It&rsquo;s only six pages long, and I found it refreshingly realistic and insightful. ¬†I would urge anyone considering a career in computer science to read it. ¬†Given its brevity (and the fact the title is reasonably descriptive), I won&rsquo;t bother summarizing the article‚Äîinstead, I&rsquo;ll merely say that you should click the link and check it out for yourself.</p>
]]></content>
  </entry>
  
</feed>
